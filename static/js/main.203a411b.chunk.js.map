{"version":3,"sources":["components/Styled/Button.tsx","UserStore.ts","UserContext.tsx","pages/user.tsx","constants/matcher.js","components/Users/UserSection.tsx","components/LogIn/Error.jsx","pages/contact-us.js","pages/messages.tsx","components/Auth/EditUsername.tsx","components/Auth/EditEmail.tsx","components/Auth/EditZipcode.tsx","components/Auth/EditPassword.tsx","components/Auth/EditPhone.tsx","components/Auth/DatePicker.jsx","components/Auth/EditDOB.tsx","components/LogIn/UserSettings.tsx","pages/settings.js","constants/ProfileConstants.tsx","components/Styled/Textarea.tsx","components/Styled/Select.tsx","components/manageProfile/EditProfile.tsx","components/manageProfile/ViewEditProfile.tsx","pages/profile.js","components/RangeSlider.js","components/Browse/BrowseProfiles.tsx","pages/home.js","components/LogIn/ResetPassword.jsx","pages/resetpassword.js","components/LogIn/ForgotPassword.jsx","pages/fpassword.js","components/SignOut.tsx","pages/logout.js","components/Register/Register2.jsx","pages/register.js","components/LogIn/SignIn2.jsx","pages/login.js","components/LogIn/ForgotUsername.jsx","pages/fusername.js","images/2unstoppable.png","components/Styled/input.tsx","images/2Unstoppable_logo.png","pages sync /^/.//.*$","page-renderer.js","App.tsx","serviceWorker.js","index.js","components/Toast/Toast.tsx","components/Navigation/SideNav.tsx","components/Navigation/TopNav.tsx","layouts/Default.tsx","assets/colors.js"],"names":["Button","styled","button","props","color","background","colors","buttonBackground","padding","borderRadius","fontSize","border","margin","ProfileStore","id","zipcode","city","state","country","state_code","distance","time_zone","dob","age","other_favorite_activities","fitness_level","cancer_location","prefered_exercise_location","prefered_exercise_time","reason_for_match","treatment_status","treatment_description","personality","work_status","details_about_self","other_cancer_location","part_of_wellness_program","which_wellness_program","latitude","longitude","step_status","moderated","referred_by","photo","liked_profiles","activity_ids","exercise_reason_ids","phone","this","hydrate","then","console","log","UserStore","persist","localStorage","userStore","localStorageData","JSON","parse","username","isLoggedIn","profile","avatarPath","profileId","current_user_id","email","activities","exerciseReasons","includes","push","filter","currId","setItem","stringify","observable","action","create","storage","jsonify","createStore","StoreContext","React","createContext","StoreProvider","store","useLocalStore","Provider","value","children","useDataStore","useContext","Error","User","useParams","useState","user","setUser","loading","setLoading","useEffect","a","axios","get","PROFILEURL","withCredentials","headers","contentType","data","getProfile","style","textDecoration","to","className","me","ROOTURL","LOGINURL","LOGOUTURL","ALLPROFILESURL","REGISTERURL","FORGOTUSERNAMEURL","RESETPASSWORDURL","VALIDUSERNAMEURL","SAVEUSERNAMEURL","VALIDEMAILURL","SAVEEMAILURL","SAVEDOBURL","SAVEZIPCODEURL","SAVEPASSWORDURL","SAVEPHONEURL","UserSection","ProfileIconRow","icon","field","answer","chips","ChipList","Chip","activityId","getMatch","matched","find","name","map","activity","i","key","src","display","primary","preferred_excercise_location","touched","message","ContactUs","messages","EditUsername","history","useHistory","errorMessage","setErrorMessage","handleCancelUsername","event","preventDefault","stateProps","setShowUsername","ValidationSchema","Yup","shape","min","max","required","test","Promise","resolve","reject","post","res","initialValues","validationSchema","validate","values","onSubmit","setSubmitting","resetForm","setTimeout","patch","result","status","displayToast","saveData","errors","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","type","onChange","onBlur","placeholder","disabled","onClick","EditEmail","handleCancelEmail","setShowEmail","EditZipcode","handleCancelZipcode","setShowZipcode","matches","EditPassword","setIsError","handleCancelPassword","setShowPassword","currentpassword","newpassword","confirmnewpassword","when","is","val","length","oneOf","alert","fetchData","phoneRegExp","EditPhone","handleCancelPhone","setShowPhone","DatePickerField","useFormikContext","useField","selected","Date","EditDOB","handleCancelDOB","setShowDOB","newDOB","year","getFullYear","month","getMonth","day","getDate","setDOB","DatePicker","UserSettings","showEmail","showUsername","showPassword","showPhone","showDOB","showZipcode","ZipcodeDisable","setZipcodeDisable","EmailDisable","setEmailDisable","UsernameDisable","setUsernameDisable","DOBDisable","setDOBDisable","PasswordDisable","setPasswordDisable","PhoneDisable","setPhoneDisable","handleEditEmail","handleEditPassword","handleEditDOB","handleEditZipcode","Default","hidden","Usettings","CANCERLOCATIONLIST","PERSONALITY_DESCRIPTION","TREATMENT_STATUS_DESCRIPTIONS","PREFERRED_EXERCISE_LOCATIONS","PREFERRED_TIME_DESCRIPTIONS","FITNESS_LEVEL_DESCRIPTIONS","WORK_STATUS_DESCRIPTIONS","Textarea","textarea","focusBorder","Input","select","RadioButton","label","checked","htmlFor","input","withComponent","EditProfile","editControls","stringActivities","Object","keys","toString","stringReasons","handleCancel","setEditMode","String","url","Number","response","request","item","as","Select","placeHolder","rows","cols","component","placeoHlder","ViewEditProfile","currentProfile","editMode","Profile","RangeSlider","classes","makeStyles","root","width","useStyles","ageRange","Slider","valueLabelDisplay","aria-labelledby","BrowseProfiles","setFilter","userCollection","setUserCollection","setAgeRange","params","min_age","max_age","commit","search","getProfiles","newAgeRange","updateLikedProfiles","likeProfile","unlikeProfile","ProfileCard","useObserver","e","target","Home","recaptchaRef","createRef","password","changepassword","ForgotPassword","resetPassword","location","query","reset_password_token","for","class","current","execute","ref","size","sitekey","Resetpassword","ResetPassword","stype","Fpassword","SignOut","delete","clear","Logout","today","minDate","nullable","Register2","hear","createAcc","UnsIcon","utils","DateFnsUtils","inputVariant","disableFuture","openTo","views","format","Register","SignIn2","all_activities","all_exercise_reasons","activeClassName","Login","ForgotUsername","Fusername","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","PageRenderer","page","createElement","require","default","err","warn","generatePage","useRouteMatch","NoMatchPage","App","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","Toast","title","appearance","duration","position","toaster","notify","sideNavLinks","optionLinks","SideNav","justifyContent","alt","link","TopNav"],"mappings":"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","file":"static/js/main.203a411b.chunk.js","sourcesContent":["import React from 'react';\nimport colors from '../../assets/colors';\nimport styled from 'styled-components';\n\ninterface ButtonProps {\n  color?: string,\n  background?: string,\n  hoverBorder?: string,\n  border?: string,\n  padding?: string,\n  margin?: string,\n  fontSize?: string,\n  borderRadius?: string\n}\n\nconst Button = styled.button<ButtonProps>`\n  color: ${props => props.color ? props.color : \"white\"};\n  background: ${props => props.background ? props.background : colors.buttonBackground};\n  padding: ${props => props.padding ? props.padding : \"4px 6px\"};\n  min-width: 20px;\n  border-radius: ${props => props.borderRadius ? props.borderRadius : \"5px\"};\n  font-weight: 700;\n  font-size: ${props => props.fontSize ? props.fontSize : \"16px\"};\n  outline:none;\n  border: ${props => props.border ? props.border : \"none\"};\n  margin: ${props => props.margin ? props.margin : \"0\"};\n`\n\nexport default Button;","import { observable, action } from 'mobx';\nimport { create, persist} from 'mobx-persist';\n\n/** \nexport type UserStoreType = {\n  username: string\n  isLoggedIn: boolean\n  profile: ProfileStoreType\n}\n\n\nexport type ProfileStoreType = {\n  id: number\n  zipcode: string\n  city: string\n  state: string\n  country: string\n  state_code: string\n  distance: number\n  time_zone: string\n  dob: string\n  age: number\n  other_favorite_activities: string\n  fitness_level: string\n  cancer_location: string\n  prefered_exercise_location: string\n  prefered_exercise_time: string\n  reason_for_match: string\n  treatment_status: string\n  treatment_description: string\n  personality: string\n  work_status: string\n  details_about_self: string\n  other_cancer_location: string\n  part_of_wellness_program:boolean\n  which_wellness_program: string\n  latitude: number\n  longitude: number\n  step_status: string\n  moderated: boolean\n  referred_by: string\n}\n\n\nexport type ProfileListStore = {\n  profileList: ProfileStoreType[]\n}\n**/\n\nexport class ActivitiesStore {\n  id: number;\n  name: string;\n  constructor(){\n    this.id = 0;\n    this.name = \"\";\n  }\n}\n\nexport class ExerciseReasonsStore {\n  id: number;\n  name: string;\n  constructor(){\n    this.id = 0;\n    this.name = \"\";\n  }\n}\n\nexport class ProfileStore {\n  id: number;\n  zipcode: string;\n  city: string;\n  state: string;\n  country: string;\n  state_code: string;\n  distance: number;\n  time_zone: string;\n  dob: string;\n  age: number;\n  other_favorite_activities: string;\n  fitness_level: string;\n  cancer_location: string;\n  prefered_exercise_location: string;\n  prefered_exercise_time: string;\n  reason_for_match: string;\n  treatment_status: string;\n  treatment_description: string;\n  personality: string;\n  work_status: string;\n  details_about_self: string;\n  other_cancer_location: string;\n  part_of_wellness_program:boolean;\n  which_wellness_program: string;\n  latitude: number;\n  longitude: number;\n  step_status: string;\n  moderated: boolean;\n  referred_by: string;\n  photo: string;\n  liked_profiles: number[];\n  activity_ids: number[];\n  exercise_reason_ids: number[];\n  phone: string;\n\n  constructor() {\n    this.id = 0;\n    this.zipcode = \"\";\n    this.city = \"\";\n    this.state = \"\";\n    this.country = \"\";\n    this.state_code = \"\";\n    this.distance = 0;\n    this.time_zone = \"\";\n    this.dob = \"\";\n    this.age = 18;\n    this.other_favorite_activities = \"\";\n    this.fitness_level = \"\";\n    this.cancer_location = \"\";\n    this.prefered_exercise_location = \"\";\n    this.prefered_exercise_time = \"\";\n    this.reason_for_match = \"\";\n    this.treatment_status = \"\";\n    this.treatment_description = \"\";\n    this.personality = \"\";\n    this.work_status = \"\";\n    this.details_about_self = \"\";\n    this.other_cancer_location = \"\";\n    this.part_of_wellness_program = false;\n    this.which_wellness_program = \"\";\n    this.latitude = 0;\n    this.longitude = 0;\n    this.step_status = \"\";\n    this.moderated = false;\n    this.referred_by = \"\";\n    this.photo = \"\";\n    this.liked_profiles = [];\n    this.activity_ids = [];\n    this.exercise_reason_ids = [];\n    this.phone = \"\";\n    hydrate('profileStore', this).then(() => console.log('profileStore has been hydrated'))\n  }\n}\n\nexport class UserStore {\n  @persist @observable username:string;\n  @persist current_user_id:number;\n  @persist @observable isLoggedIn: boolean;\n  @persist @observable profileId: number;\n  @persist('object') @observable profile: ProfileStore;\n  @persist @observable avatarPath: string;\n  // @persist @observable editMode: boolean;\n  @persist @observable email: string;\n  @persist activities: ActivitiesStore[];\n  @persist exerciseReasons: ExerciseReasonsStore[];\n\n  constructor(){\n     // When the User hits refresh, get the values from the local storage.\n    if (localStorage.userStore != null) {\n      var localStorageData = JSON.parse(localStorage[\"userStore\"]);\n      this.username = localStorageData.username;\n      this.isLoggedIn = localStorageData.isLoggedIn;\n      this.profile = localStorageData.profile;\n      this.avatarPath = localStorageData.avatarPath;\n      this.profileId = localStorageData.profileId;\n      this.current_user_id = localStorageData.current_user_id;\n      // this.editMode = localStorageData.editMode;\n      this.email = localStorageData.email;\n      this.activities = localStorageData.activities;\n      this.exerciseReasons = localStorageData.exerciseReasons;\n    } else {\n      this.username = \"\";\n      this.email = \"\";\n      this.isLoggedIn = false;\n      this.profile = new ProfileStore();\n      this.avatarPath = \"\";\n      this.profileId = 0;\n      this.current_user_id=0;\n      // this.editMode = false;\n      this.activities = [];\n      this.exerciseReasons = [];\n      }\n    // hydrate('userStore', this).then(() => console.log('userStore has been hydrated'))\n  }\n\n  @action\n  likeProfile(id: number) {\n    if (!this.profile.liked_profiles.includes(id)) {\n      this.profile.liked_profiles.push(id)\n    }\n  }\n  \n  @action\n  unlikeProfile(id: number) {\n    if (this.profile.liked_profiles.includes(id)) {\n      this.profile.liked_profiles = this.profile.liked_profiles.filter((currId: number) => currId !== id);\n    }\n  }\n\n  clear() {\n      this.username = \"\";\n      this.isLoggedIn = false;\n      this.profile = new ProfileStore();\n      this.avatarPath = \"\";\n      this.profileId = 0;\n      // this.editMode = false;\n  }\n\n  setDOB(dob: string) {\n      this.profile.dob = dob;\n      localStorage.setItem(\"userStore\", JSON.stringify(this));\n  }\n}\n\n\nconst hydrate = create({\n  storage: localStorage,   // or AsyncStorage in react-native.\n                          // default: localStorage\n  jsonify: true  // if you use AsyncStorage, here shoud be true\n                  // default: true\n})\n\nexport function createStore() {\n  const store = new UserStore();\n  return store;\n}\n\nexport type ProfileProps = {\n  profile: ProfileStore;\n};\n\n\nexport type TStore = ReturnType<typeof createStore>\n","import React, {createContext, ReactNode} from 'react'\nimport {useLocalStore} from 'mobx-react'\nimport {createStore, UserStore} from './UserStore'\n\n//type Store = ReturnType<typeof createStore>;\n\nexport const StoreContext = React.createContext<UserStore | null>(null);\n\nexport const StoreProvider = (props: { children?: ReactNode }) => {\n  const store = useLocalStore(createStore);\n  return (\n    <StoreContext.Provider value={store}>\n      {props.children}\n    </StoreContext.Provider>\n  )\n};\n\nexport const useDataStore = () => {\n  const store = React.useContext(StoreContext);\n  if (!store) {\n    throw new Error(\"useDataStore: !store, did you forget StoreProvider?\");\n  }\n  return store;\n};\n","import React, {useEffect, useState} from 'react'\nimport {useParams, Link} from \"react-router-dom\";\nimport { ALLPROFILESURL, ROOTURL, PROFILEURL } from \"../constants/matcher\";\nimport axios from 'axios'\nimport Default from '../layouts/Default';\nimport UserSection from '../components/Users/UserSection'\nimport Button from '../components/Styled/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst User = () => {\n  let { id } = useParams();\n  const [user, setUser] = useState<any>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const getProfile = async () => {\n      try {\n        const { data } = await axios.get(`${PROFILEURL}/${id}.json`, { withCredentials: true,\n          headers: {\n            contentType: \"application/json; charset=utf-8\",\n        }})\n        setUser(data.profile)\n        setLoading(false)\n      } catch (e) {\n        throw new Error(e)\n      }\n    }\n    getProfile();\n  }, [])\n\n  if (!user || loading ) {\n    return <div>Loading...</div>\n  }\n\n  return (    \n      <Default>\n        <Link style={{ textDecoration: \"underline\" }} to=\"/home\">\n          <Button background=\"white\" color=\"#222222\" fontSize=\"13px\" padding=\"2px 12px\" border=\"1px solid #222222\" borderRadius=\"30px\">\n            <ArrowBackIcon className=\"go-back-home\" />\n            Go Back Home\n          </Button>\n        </Link>\n        <UserSection me={false} user={user} />\n      </Default>\n  )\n}\n\nexport default User;\n","//export const ROOTURL = \"http://localhost:3001\"\nexport const ROOTURL = \"http://uns1.herokuapp.com\"\nexport const LOGINURL = ROOTURL + \"/users/sign_in\"\nexport const LOGOUTURL = ROOTURL + \"/users/sign_out\"\nexport const ALLPROFILESURL = ROOTURL + \"/profiles.json\"\nexport const PROFILEURL = ROOTURL + \"/profiles\"\nexport const REGISTERURL = ROOTURL + \"/users\"\nexport const FORGOTUSERNAMEURL = ROOTURL + \"/send_username\"\nexport const SAVEUSERURL = ROOTURL + \"/users\"\nexport const RESETPASSWORDURL = ROOTURL + \"/users/password/edit\"\nexport const UPLOADAVATARURL = ROOTURL + \"/attachment/photosave\"\n// Account setting URLs\nexport const VALIDUSERNAMEURL = ROOTURL + \"/account_settings/valid_username\"\nexport const SAVEUSERNAMEURL = ROOTURL + \"/account_settings/change_username\"\nexport const VALIDEMAILURL = ROOTURL + \"/account_settings/valid_email\"\nexport const SAVEEMAILURL = ROOTURL + \"/account_settings/change_email\"\nexport const SAVEDOBURL = ROOTURL + \"/account_settings/change_dob\"\nexport const SAVEZIPCODEURL = ROOTURL + \"/account_settings/change_zipcode\"\nexport const SAVEPASSWORDURL = ROOTURL + \"/account_settings/update_password\"\nexport const SAVEPHONEURL = ROOTURL + \"/account_settings/change_phone\"\nexport const VALIDPHONEURL = ROOTURL + \"/account_settings/valid_phone\"\n\n\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\nimport { ALLPROFILESURL, ROOTURL, PROFILEURL } from \"../../constants/matcher\";\nimport './index.scss';\nimport colors from '../../assets/colors'\nimport { useDataStore } from \"../../UserContext\";\n\nimport Button from '../Styled/Button';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport SportsTennisIcon from '@material-ui/icons/SportsTennis';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport WorkIcon from '@material-ui/icons/Work';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst UserSection: React.FC<{user: any, me: boolean }> = ({ user, me}) => {\n  const store = useDataStore()\n\n  const ProfileIconRow = ({ icon, field, answer, chips }) => {\n    if (!answer || answer === \"\") {\n      return null\n    }\n\n    return (\n      <div className=\"full-profile-icon-row\">\n        <div className=\"field-question-profile\">\n          {icon}\n          <div>{field}</div>\n        </div>\n        <div className=\"field-answer muted-text\">{answer}</div>\n      </div>\n    )\n  }\n\n  const ChipList = () => {\n    const Chip = ({ activityId }) => {\n      const getMatch = () => {\n        const matched = store.activities.find(({ id }) => id === activityId )\n        if (matched) return matched.name\n        return null\n      }      \n\n      return (\n        <span className=\"profile-single-chip\">{getMatch() ? getMatch() : null}</span>\n      )\n    }\n\n    return (\n      <span className=\"profile-chip-list\">\n        {user.activity_ids.map((activity: any, i: number) => \n          <Chip key={i} activityId={activity} />\n        )}\n      </span>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"user-section-wrapper\">\n        <div className=\"user-section-data\">\n          <h1 style={{ fontSize: \"26px\" }}>{user.name}  · <span className=\"full-profile-location muted-text\">{user.city}, {user.state}</span></h1>\n\n          <hr></hr>\n\n          <div className=\"profile-section-header\">About me 😀</div>\n          <p className=\"muted-text\">{user.age} years old</p>\n          <ProfileIconRow field={\"Personality\"} chips={false} answer={user.personality} icon={<EmojiPeopleIcon className=\"full-profile-icon\" />}/>\n\n          <ProfileIconRow field={\"Details\"} chips={false} answer={<div className=\"full-profile-das\">\n            <p>{user.details_about_self}</p>\n            </div>} icon={<NotesIcon className=\"full-profile-icon\" />}/>\n\n          <ProfileIconRow field={\"Work Status\"} chips={false} answer={user.work_status} icon={<WorkIcon className=\"full-profile-icon\" />}/>\n        </div>\n        <div className=\"user-metadata\">\n            <img className=\"user-section-image\" src={ROOTURL + user.photo} />\n            {me ?  null : (\n              <div style={{ display: \"flex\" }}>\n                <Button margin=\"0em 0.3em 0em 0em\" padding=\"4px 12px\" fontSize=\"14px\" borderRadius=\"20px\" >Message {user.name}</Button>\n                <Button margin=\"0em 0em\" background=\"white\" padding=\"4px 12px\" fontSize=\"14px\" borderRadius=\"20px\" color={colors.primary} border={\"1px solid\" + colors.primary}>Save as Favorite</Button>\n              </div>\n            )}\n        </div>\n      </div>\n\n      <hr></hr>\n      <div className=\"user-section-other-wrapper\">\n      \n          <div className=\"profile-section-header\">Details about Diagnosis</div>\n          \n          <p>{user.cancer_location} cancer</p>\n          <ProfileIconRow field={\"Treatment description\"} chips={false} answer={user.treatment_description} icon={null}/>\n          <ProfileIconRow field={\"Treatment status\"} chips={false} answer={user.treatment_status} icon={null}/>\n          \n          <ProfileIconRow field={\"Part of wellness program?\"} chips={false} answer={user.part_of_wellness_program ? \"✅\" : \"No\"} icon={null}/>\n\n          {user.part_of_wellness_program ? <ProfileIconRow field={\"Which wellness program?\"} chips={false} answer={user.which_wellness_program} icon={null}/> : null}\n\n          <hr></hr>\n          <div className=\"profile-section-header\">Activity/Fitness</div>\n\n          <ProfileIconRow field={\"Reasons for Match\"} chips={false} answer={user.reason_for_match} icon={null}/>\n\n          <ProfileIconRow field={\"Fitness Level\"} chips={false} answer={user.fitness_level} icon={<FitnessCenterIcon className=\"full-profile-icon\" />}/>\n\n          <ProfileIconRow field={\"Activities\"} chips={true} answer={<ChipList />} icon={<SportsTennisIcon className={\"full-profile-icon\"} />} />\n\n          <ProfileIconRow field={\"Prefered exercise location\"} chips={true} answer={user.preferred_excercise_location} icon={<ExploreIcon className={\"full-profile-icon\"} />} />\n\n          <ProfileIconRow field={\"Prefered exercise time\"} chips={true} answer={user.prefered_exercise_time} icon={<ScheduleIcon className={\"full-profile-icon\"} />} />\n          \n        </div>\n    </div>\n    // </div>\n  )\n}\n\nexport default UserSection\n","import React from \"react\";\n\nconst Error = ({ touched, message }) => {\n  if (!touched) {\n    return <div className=\"form-message invalid\">&nbsp;</div>;\n  }\n  if (message) {\n    return <div className=\"form-message invalid\">{message}</div>;\n  }\n  return <div className=\"form-message valid\"></div>;\n};\n\nexport default Error;","import React from 'react'\n\nexport default function ContactUs() {\n  return <div>Contact Us</div>\n}","import React from 'react';\nimport Default from '../layouts/Default';\n\nconst messages = () => {\n  return (\n    <Default>\n      <h3>Messages</h3>\n    </Default>\n  )\n}\n\nexport default messages\n","import React, {useState} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport Error from \"../LogIn/Error\";\nimport axios from \"axios\";\nimport '../LogIn/UserSettings.scss'\nimport * as Yup from 'yup';\nimport { SAVEUSERNAMEURL, VALIDUSERNAMEURL } from \"../../constants/matcher\";\nimport Button from '../Styled/Button';\nimport Input from '../Styled/input';\nimport { displayToast } from '../Toast/Toast';\n\ninterface IStateProps {\n  stateProps: {\n    setShowUsername: React.Dispatch<React.SetStateAction<boolean>>\n  }\n}\n  \nconst EditUsername = (props: IStateProps) => {\n    const store = useDataStore();\n    const history = useHistory();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleCancelUsername = (event: React.MouseEvent) => {\n      event.preventDefault();\n      props.stateProps.setShowUsername(false);\n    }\n\n    const ValidationSchema = Yup.object().shape({\n        username: Yup.string()\n          .min(2, \"Too Short!\")\n          .max(255, \"Too Long!\")\n          .required(\"Required!!\")\n          .test('Unique Username','Username already been taken', \n              function(value){return new Promise((resolve, reject) => {        \n                  axios.post(VALIDUSERNAMEURL,  { \"username\": value, \"id\": store.current_user_id},{ withCredentials: true,\n                  headers: {\n                    contentType: \"application/json; charset=utf-8\",\n                }})\n                 .then(res => {\n                   if(res.data.message === 'Username already been taken'){\n                     console.log(res.data.message);\n                     resolve(false);\n                  } else {\n                    console.log(\"User valid\")\n                    resolve(true);\n                  }\n                })\n              })}\n          )   \n      });\n      \n    const setUsername = (name) => {\n      store.username = name;\n      localStorage.setItem(\"userStore\", JSON.stringify(store));\n    }\n  \n    return (\n      <Formik\n        initialValues={{\n          username: \"\",\n        }}\n        validationSchema={ValidationSchema}\n        validate={values => {\n          let errors = {};\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          setTimeout(() => {\n           // alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n  \n          const saveData = async () => {\n       \n            try {\n                const result = await axios.patch(SAVEUSERNAMEURL,\n                  { \"username\": values.username, \"id\": store.current_user_id},\n                  { withCredentials: true, headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\"}\n                });\n                console.log(JSON.stringify(result));\n                if (result.data.status != \"error\") {\n                  setUsername(values.username);\n                  values.username =  result.data.username;;\n                  console.log(\"updated username=\"+ store.username);\n                  props.stateProps.setShowUsername(false);\n                  history.push(\"/settings\");\n                  displayToast(\"Successfully updated username ✅\", \"success\", 3000, \"top-right\")\n                }\n                else {\n                displayToast(\"Failed to update username\", \"error\", 3000, \"top-right\")  \n                console.log(\"printint error  message\")\n                console.log(result.data.message);\n                setErrorMessage(result.data.message);\n                }\n            } catch (error) {\n            console.log(JSON.stringify(error));\n            setErrorMessage(error.message);\n            }\n        };\n        saveData();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-row\">\n              <label>Name</label>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.username}\n                placeholder={store.username}\n                className={\"login-form \" + (touched.username && errors.username ? \"has-error\" : null)}\n              />\n              <Error touched={touched.username} message={errors.username} />\n              <Error touched={touched.username} message={errorMessage} />\n            </div>\n  \n            <div className=\"input-row\">\n            <Button type=\"submit\" margin=\"0em 0em\" disabled={isSubmitting}>\n                Submit\n              </Button>\n              <Button type=\"submit\" margin=\"0em 1.5em\"  onClick={handleCancelUsername}>\n                Cancel\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    );\n  }\n  \n\nexport default EditUsername;\n","import React, {useState} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport Error from \"../LogIn/Error\";\nimport axios from \"axios\";\nimport '../LogIn/UserSettings.scss'\nimport * as Yup from 'yup';\nimport { SAVEEMAILURL, VALIDEMAILURL } from \"../../constants/matcher\";\nimport Button from '../Styled/Button';\nimport Input from '../Styled/input';\nimport { displayToast } from '../Toast/Toast';\n\ninterface IStateProps {\n  stateProps: {\n    setShowEmail: React.Dispatch<React.SetStateAction<boolean>>\n  }\n}\n  \nconst EditEmail = (props: IStateProps) => {\n    const store = useDataStore();\n    const history = useHistory();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleCancelEmail = (event: React.MouseEvent) => {\n      event.preventDefault();\n      props.stateProps.setShowEmail(false);\n    }\n\n\n    const ValidationSchema = Yup.object().shape({\n        email: Yup.string()\n          .email('Invalid email')\n          .required(\"Required!!\")\n     .test('Unique Email','Email already been taken', \n              function(value){return new Promise((resolve, reject) => {        \n                  axios.post(VALIDEMAILURL,  { \"email\": value, \"id\": store.current_user_id},{ withCredentials: true,\n                  headers: {\n                    contentType: \"application/json; charset=utf-8\",\n                }})\n                 .then(res => {\n                   if(res.data.message === 'Email already been taken'){\n                     console.log(res.data.message);\n                     resolve(false);\n                  } else {\n                    console.log(\"Email valid\")\n                    resolve(true);\n                  }\n                })\n              })}\n            )  \n      });\n      \n    const setEmail = (email) => {\n      store.email = email;\n      localStorage.setItem(\"userStore\", JSON.stringify(store));\n    }\n  \n    return (\n      <Formik\n        initialValues={{\n          email: \"\",\n        }}\n        validationSchema={ValidationSchema}\n        validate={values => {\n          let errors = {};\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          setTimeout(() => {\n           // alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n  \n          const saveData = async () => {\n       \n            try {\n                const result = await axios.patch(SAVEEMAILURL,\n                  { \"email\": values.email, \"id\": store.current_user_id},\n                  { withCredentials: true, headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\"}\n                });\n                console.log(JSON.stringify(result));\n                if (result.data.status != \"error\") {\n                  setEmail(values.email);\n                  values.email =  result.data.email;;\n                  console.log(\"updated email=\"+ store.email);\n                  props.stateProps.setShowEmail(false);\n                  history.push(\"/settings\");\n                  displayToast(\"Successfully updated email ✅\", \"success\", 3000, \"top-right\")\n                }\n                else {\n                console.log(\"printint error  message\")\n                console.log(result.data.message);\n                setErrorMessage(result.data.message);\n                }\n            } catch (error) {\n            console.log(JSON.stringify(error));\n            setErrorMessage(error.message);\n            }\n        };\n        saveData();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-row\">\n              <Input\n                type=\"text\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                placeholder={store.email}\n                className={\"login-form \" + (touched.email && errors.email ? \"has-error\" : null)}\n              />\n              <Error touched={touched.email} message={errors.email} />\n              <Error touched={touched.email} message={errorMessage} />\n            </div>\n  \n            <div className=\"input-row\">\n            <Button type=\"submit\" margin=\"0em 0em\" disabled={isSubmitting}>\n                Submit\n              </Button>\n              <Button type=\"submit\" margin=\"0em 1.5em\"  onClick={handleCancelEmail}>\n                Cancel\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    );\n  }\n  \n\nexport default EditEmail;\n","import React, {useState} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport Error from \"../LogIn/Error\";\nimport axios from \"axios\";\nimport '../LogIn/UserSettings.scss'\nimport * as Yup from 'yup';\nimport { SAVEZIPCODEURL } from \"../../constants/matcher\";\nimport Button from '../Styled/Button';\nimport Input from '../Styled/input';\nimport { displayToast } from '../Toast/Toast';\n\ninterface IStateProps {\n  stateProps: {\n    setShowZipcode: React.Dispatch<React.SetStateAction<boolean>>\n  }\n}\n\n\n  \nconst EditZipcode = (props: IStateProps) => {\n    const store = useDataStore();\n    const history = useHistory();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleCancelZipcode = (event: React.MouseEvent) => {\n      event.preventDefault();\n      props.stateProps.setShowZipcode(false);\n    }\n\n    const ValidationSchema = Yup.object().shape({\n        zipcode: Yup.string()\n          .matches(/(^\\d{5}$)|(^\\d{9}$)|(^\\d{5}-\\d{4}$)/, \"Please enter a valid US or CA zip/postal code.\")\n          .required(\"Required\"),\n      /*    .test('Unique Zipcode','Zipcode already been taken', \n              function(value){return new Promise((resolve, reject) => {        \n                  axios.post(VALIDZIPCODEURL,  { \"zipcode\": value, \"id\": store.current_user_id},{ withCredentials: true,\n                  headers: {\n                    contentType: \"application/json; charset=utf-8\",\n                }})\n                 .then(res => {\n                   if(res.data.message === 'Zipcode already been taken'){\n                     console.log(res.data.message);\n                     resolve(false);\n                  } else {\n                    console.log(\"User valid\")\n                    resolve(true);\n                  }\n                })\n              })}\n          ) */  \n      });\n      \n   const setZipcode = (name) => {\n     store.profile.zipcode = name;\n     localStorage.setItem(\"userStore\", JSON.stringify(store));\n    }\n  \n    return (\n      <Formik\n        initialValues={{\n          zipcode: \"\",\n        }}\n        validationSchema={ValidationSchema}\n        validate={values => {\n          let errors = {};\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          setTimeout(() => {\n           // alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n  \n          const saveData = async () => {\n       \n            try {\n                const result = await axios.patch(SAVEZIPCODEURL,\n                  { \"zipcode\": values.zipcode, \"id\": store.current_user_id},\n                  { withCredentials: true, headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\"}\n                });\n                console.log(JSON.stringify(result));\n                if (result.data.status != \"error\") {\n                  setZipcode(values.zipcode);\n                  values.zipcode =  result.data.zipcode;;\n                  console.log(\"updated zipcodee=\"+ store.profile.zipcode);\n                  props.stateProps.setShowZipcode(false);\n                  history.push(\"/settings\");\n                  displayToast(\"Successfully updated zipcode ✅\", \"success\", 3000, \"top-right\")\n                }\n                else {\n                console.log(\"printint error  message\")\n                console.log(result.data.message);\n                setErrorMessage(result.data.message);\n                displayToast(\"Failed to update zipcode\", \"error\", 3000, \"top-right\") \n                }\n            } catch (error) {\n            console.log(JSON.stringify(error));\n            setErrorMessage(error.message);\n            }\n        };\n        saveData();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-row\">\n              <Input\n                type=\"text\"\n                name=\"zipcode\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.zipcode}\n                placeholder={store.profile.zipcode}\n                className={\"login-form \" + (touched.zipcode && errors.zipcode ? \"has-error\" : null)}\n              />\n              <Error touched={touched.zipcode} message={errors.zipcode} />\n              <Error touched={touched.zipcode} message={errorMessage} />\n            </div>\n  \n            <div className=\"input-row\">\n              <Button type=\"submit\" margin=\"0em 0em\" disabled={isSubmitting}>\n                Submit\n              </Button>\n              <Button type=\"submit\" margin=\"0em 1.5em\"  onClick={handleCancelZipcode}>\n                Cancel\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    );\n  }\n  \n\nexport default EditZipcode;\n","import React, {useState} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport Error from \"../LogIn/Error\";\nimport axios from \"axios\";\nimport '../LogIn/UserSettings.scss'\nimport * as Yup from 'yup';\nimport { SAVEPASSWORDURL } from \"../../constants/matcher\";\nimport Button from '../Styled/Button';\nimport Input from '../Styled/input';\nimport { displayToast } from '../Toast/Toast';\n\ninterface IStateProps {\n  stateProps: {\n    setShowPassword: React.Dispatch<React.SetStateAction<boolean>>\n  }\n}\n\n\n  \nconst EditPassword = (props: IStateProps) => {\n    const store = useDataStore();\n    const history = useHistory();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [isError, setIsError] = useState(false);\n\n    const handleCancelPassword = (event: React.MouseEvent) => {\n      event.preventDefault();\n      props.stateProps.setShowPassword(false);\n    }\n\n    const ValidationSchema = Yup.object().shape({\n        currentpassword: Yup.string()\n          .min(8, \"Must be at least 8 characters long!\")\n          .required(\"Required\")\n          .matches(/(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])/, \"Does not meet requirements\")\n          .required(\"Current Password Required!!\"), \n        newpassword: Yup.string()\n          .min(8, \"Must be at least 8 characters long!\")\n          .required(\"Required\")\n          .matches(/(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])/, \"Does not meet requirements\")\n          .required(\"New Password Required!!\"), \n        confirmnewpassword: Yup.string()\n          .min(8, \"Must be at least 8 characters long!\")\n          .required(\"Required\")\n          .matches(/(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])/, \"Does not meet requirements\")\n          .when(\"newpassword\", {\n            is: val => (val && val.length > 0 ? true : false),\n            then: Yup.string().oneOf(\n              [Yup.ref(\"newpassword\")],\n              \"both passwords need to be the same\"\n              )\n          })\n          .required(\" Confirm New Password Required!!\"),\n      });\n  \n    return (\n      <Formik\n        initialValues={{\n          currentpassword: '',\n          newpassword: '',\n          confirmnewpassword: '',\n        }}\n        validationSchema={ValidationSchema}\n        validate={values => {\n          let errors = {};\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n  \n          const fetchData = async () => {\n            //setIsError(false);\n          //  store.isLoggedIn = false;\n       \n            try {\n              const result = await axios.patch(SAVEPASSWORDURL,\n                { user: {\"current_password\": values.currentpassword, \"password\": values.newpassword,\"password_confirmation\": values.confirmnewpassword}, id:store.current_user_id},\n                { withCredentials: true, headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\"}\n              });\n                console.log(JSON.stringify(result));\n                console.log(result.data.username);\n                displayToast(\"Successfully updated password ✅\", \"success\", 3000, \"top-right\")\n            } catch (error) {\n              console.log(error.message);\n              if (error.message.includes(\"401\")) {\n                setErrorMessage(\"Invalid Username or Password.\");\n              } else {\n                setErrorMessage(error.message);\n              }\n              setIsError(true);\n            }\n            if(store.isLoggedIn){\n              history.push(\"/home\");\n            } else {\n              history.push(\"/login\")\n            }\n          };\n          /* Login and fetch initial data */\n          fetchData();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div>\n              <Input\n                type=\"password\"\n                name=\"currentpassword\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Current password\"\n                className={\"login-form \" + (touched.currentpassword && errors.currentpassword ? \"has-error\" : null)}\n              />\n              <Input\n                type=\"password\"\n                name=\"newpassword\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"New password\"\n                className={\"login-form \" + (touched.newpassword && errors.newpassword ? \"has-error\" : null)}\n              />\n              <Input\n                type=\"password\"\n                name=\"confirmnewpassword\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Confirm New password\"\n                className={\"login-form \" + (touched.confirmnewpassword && errors.confirmnewpassword ? \"has-error\" : null)}\n              />\n              <Error touched={touched.currentpassword} message={errors.currentpassword} />\n              <Error touched={touched.currentpassword} message={errorMessage} />\n              <Error touched={touched.newpassword} message={errors.newpassword} />\n              <Error touched={touched.newpassword} message={errorMessage} />\n              <Error touched={touched.confirmnewpassword} message={errors.confirmnewpassword} />\n              <Error touched={touched.confirmnewpassword} message={errorMessage} />\n            </div>\n            <div>\n            (8 characters minimum, must contain at least 1 uppercase, 1 lowercase, and 1 number)\n            </div>\n            <div>\n              <Button type=\"submit\" margin=\"0em 0em\" disabled={isSubmitting}>\n                Submit\n              </Button>\n              <Button type=\"submit\" margin=\"0em 1.5em\"  onClick={handleCancelPassword}>\n                Cancel\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    );\n  }\n  \n\nexport default EditPassword;\n","import React, {useState} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport Error from \"../LogIn/Error\";\nimport axios from \"axios\";\nimport '../LogIn/UserSettings.scss'\nimport * as Yup from 'yup';\nimport { SAVEPHONEURL, VALIDPHONEURL } from \"../../constants/matcher\";\nimport Button from '../Styled/Button';\nimport Input from '../Styled/input';\nimport { displayToast } from '../Toast/Toast';\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\ninterface IStateProps {\n  stateProps: {\n    setShowPhone: React.Dispatch<React.SetStateAction<boolean>>\n  }\n}\n  \nconst EditPhone = (props: IStateProps) => {\n    const store = useDataStore();\n    const history = useHistory();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleCancelPhone = (event: React.MouseEvent) => {\n      event.preventDefault();\n      props.stateProps.setShowPhone(false);\n    }\n\n    const ValidationSchema = Yup.object().shape({\n        phone: Yup.string()\n          .matches(phoneRegExp, 'Phone number is not valid')\n          .required(\"Required!!\")\n        /*  .test('Unique Username','Username already been taken', \n              function(value){return new Promise((resolve, reject) => {        \n                  axios.post(VALIDUSERNAMEURL,  { \"username\": value, \"id\": store.current_user_id},{ withCredentials: true,\n                  headers: {\n                    contentType: \"application/json; charset=utf-8\",\n                }})\n                 .then(res => {\n                   if(res.data.message === 'Username already been taken'){\n                     console.log(res.data.message);\n                     resolve(false);\n                  } else {\n                    console.log(\"User valid\")\n                    resolve(true);\n                  }\n                })\n              })}\n          )  */ \n      });\n      \n    const setPhone = (name) => {\n      store.profile.phone = name;\n      localStorage.setItem(\"userStore\", JSON.stringify(store));\n    }\n  \n    return (\n      <Formik\n        initialValues={{\n          phone: \"\",\n        }}\n        validationSchema={ValidationSchema}\n        validate={values => {\n          let errors = {};\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          setTimeout(() => {\n           // alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n  \n          const saveData = async () => {\n       \n            try {\n                const result = await axios.patch(SAVEPHONEURL,\n                  { \"phone\": values.phone, \"id\": store.current_user_id},\n                  { withCredentials: true, headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\"}\n                });\n                console.log(JSON.stringify(result));\n                if (result.data.status != \"error\") {\n                  setPhone(values.phone);\n                  values.phone =  result.data.phone;;\n                  console.log(\"updated phone=\"+ store.profile.phone);\n                  props.stateProps.setShowPhone(false);\n                  history.push(\"/settings\");\n                  displayToast(\"Successfully updated phone number ✅\", \"success\", 3000, \"top-right\")\n                }\n                else {\n                console.log(\"printint error  message\")\n                console.log(result.data.message);\n                setErrorMessage(result.data.message);\n                displayToast(\"Failed to update phone number\", \"error\", 3000, \"top-right\") \n                }\n            } catch (error) {\n            console.log(JSON.stringify(error));\n            setErrorMessage(error.message);\n            }\n        };\n        saveData();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-row\">\n              <Input\n                type=\"text\"\n                name=\"phone\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.phone}\n                placeholder={store.profile.phone}\n                className={\"login-form \" + (touched.phone && errors.phone ? \"has-error\" : null)}\n              />\n              <Error touched={touched.phone} message={errors.phone} />\n              <Error touched={touched.phone} message={errorMessage} />\n            </div>\n  \n            <div className=\"input-row\">\n            <Button type=\"submit\" margin=\"0em 0em\" disabled={isSubmitting}>\n                Submit\n              </Button>\n              <Button type=\"submit\" margin=\"0em 1.5em\"  onClick={handleCancelPhone}>\n                Cancel\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    );\n  }\n  \n\nexport default EditPhone;\n","import React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport DatePicker from \"react-datepicker\";\n\nexport const DatePickerField = ({ ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field] = useField(props);\n  return (\n    <DatePicker\n      {...field}\n      {...props}\n      selected={(field.value && new Date(field.value)) || null}\n      onChange={val => {\n        setFieldValue(field.name, val);\n      }}\n    />\n  );\n};\n\nexport default DatePickerField;\n","import React, {useState} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport Error from \"../LogIn/Error\";\nimport axios from \"axios\";\nimport '../LogIn/UserSettings.scss'\nimport DatePicker from \"./DatePicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport * as Yup from 'yup';\nimport Button from '../Styled/Button';\nimport { SAVEDOBURL } from \"../../constants/matcher\";\nimport { displayToast } from '../Toast/Toast';\n\ninterface IStateProps {\n  stateProps: {\n    setShowDOB: React.Dispatch<React.SetStateAction<boolean>>\n  }\n}\n  \n\n\nconst EditDOB= (props: IStateProps) => {\n    const store = useDataStore();\n    const history = useHistory();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [startDate, setStartDate] = useState(new Date());\n\n    const handleCancelDOB = (event: React.MouseEvent) => {\n      event.preventDefault();\n      props.stateProps.setShowDOB(false);\n    }\n\n\n    const ValidationSchema = Yup.object().shape({\n      age: Yup.number()\n      .min(18, \"Must be 18 years old or older to register\"),\n      });\n      \n    const setUsername = (name) => {\n      store.username = name;\n      localStorage.setItem(\"userStore\", JSON.stringify(store));\n    }\n  \n    return (\n      <Formik\n        initialValues={{\n          dob: \"\",\n        }}\n        validationSchema={ValidationSchema}\n        validate={values => {\n          let errors = {};\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          setTimeout(() => {\n           // alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n\n          \n\n\n          \n          let newDOB = new Date(values.dob);\n          var year = newDOB.getFullYear();\n          var month = newDOB.getMonth()+1;\n          var day = newDOB.getDate();\n\n          console.log(year);\n          console.log(month);\n          console.log(day);\n          \n         //dob(3i)\"=> values.day, \"dob(2i)\"=>values.month, \"dob(1i)\"=>values.year}\n\n         const saveData = async () => {\n          try {\n              const result = await axios.patch(SAVEDOBURL,\n                { \"id\": store.current_user_id, \"dob(3i)\": day, \"dob(2i)\": month, \"dob(1i)\": year},\n                { withCredentials: true, headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\"}\n              });\n              console.log(JSON.stringify(result));\n              if (result.data.status != \"error\") {\n                store.setDOB(result.data.dob);\n                values.dob =  result.data.dob;;\n                console.log(\"updated username=\"+ store.profile.dob);\n                props.stateProps.setShowDOB(false);\n                history.push(\"/settings\");\n                displayToast(\"Successfully updated date of birth ✅\", \"success\", 3000, \"top-right\")\n              }\n              else {\n              console.log(\"printint error  message\")\n              console.log(result.data.message);\n              setErrorMessage(result.data.message);\n              }\n          } catch (error) {\n          console.log(JSON.stringify(error));\n          setErrorMessage(error.message);\n          }\n      };\n      saveData();\n          \n          \n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <h2>Change DOB</h2>\n            <div className=\"input-row\">\n              <DatePicker name=\"dob\" />\n            </div>\n  \n            <div className=\"input-row\">\n              <Button type=\"submit\" margin=\"0em 0em\" disabled={isSubmitting}>\n                Submit\n              </Button>\n              <Button type=\"submit\" margin=\"0em 1.5em\"  onClick={handleCancelDOB}>\n                Cancel\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    );\n  }\n  \n\nexport default EditDOB;\n","import React, {useState, useEffect} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport { ProfileStore, ProfileProps } from '../../UserStore';\nimport EditUsername from '../Auth/EditUsername';\nimport EditEmail from '../Auth/EditEmail';\nimport EditZipcode from '../Auth/EditZipcode';\nimport EditPassword from '../Auth/EditPassword';\nimport EditPhone from '../Auth/EditPhone';\nimport EditDOB from '../Auth/EditDOB';\nimport { useFormik } from 'formik';\nimport axios from \"axios\";\nimport {useObserver} from 'mobx-react'\nimport { PROFILEURL, ROOTURL, SAVEUSERNAMEURL, VALIDUSERNAMEURL} from \"../../constants/matcher\";\nimport AvatarEditor from 'react-avatar-editor';\nimport FlexView from 'react-flexview';\n//import {PrintUserInfo, DisplayProfileActivityNames, DisplayExerciseReasons} from \"./CommonElements\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Default from '../../layouts/Default'\nimport './UserSettings.scss'\nimport * as Yup from 'yup';\nimport Input from '../Styled/input';\nimport Button from '../Styled/Button'\n\n\nconst UserSettings = (props: ProfileProps) => {\n  const store = useDataStore();\n  const history = useHistory();\n  const [showEmail, setShowEmail] = useState(false);\n  const [showUsername, setShowUsername] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showPhone, setShowPhone] = useState(false);\n  const [showDOB, setShowDOB] = useState(false);\n  const [showZipcode, setShowZipcode] = useState(false);\n  const [changeEmail, setChangeEmail] = useState(store.email);\n  const [changeUsername, setChangeUsername] = useState(store.username);\n  const [changeDOB, setChangeDOB] = useState(store.profile.dob);\n  const [changeZipcode, setChangeZipcode] = useState(store.profile.zipcode);\n  const [ZipcodeDisable, setZipcodeDisable] = useState(true);\n  const [EmailDisable, setEmailDisable] = useState(true);\n  const [UsernameDisable, setUsernameDisable] = useState(true);\n  const [DOBDisable, setDOBDisable] = useState(true);\n  const [PasswordDisable, setPasswordDisable] = useState(true);\n  const [PhoneDisable, setPhoneDisable] = useState(true);\n  const profile = props.profile;\n \n  \n  useEffect(() => {\n    setZipcodeDisable(!ZipcodeDisable);\n    setEmailDisable(!EmailDisable);\n    setDOBDisable(!DOBDisable);\n    setPasswordDisable(!PasswordDisable);\n    setPhoneDisable(!PhoneDisable);\n  },\n  [showUsername]);\n\n  useEffect(() => {\n    setZipcodeDisable(!ZipcodeDisable);\n    setUsernameDisable(!UsernameDisable);\n    setDOBDisable(!DOBDisable);\n    setPasswordDisable(!PasswordDisable);\n    setPhoneDisable(!PhoneDisable);\n  },\n  [showEmail]);\n\n  useEffect(() => {\n    setUsernameDisable(!UsernameDisable);\n    setEmailDisable(!EmailDisable);\n    setDOBDisable(!DOBDisable);\n    setPasswordDisable(!PasswordDisable);\n    setPhoneDisable(!PhoneDisable);\n  },\n  [showZipcode]);\n\n  useEffect(() => {\n    setZipcodeDisable(!ZipcodeDisable);\n    setEmailDisable(!EmailDisable);\n    setUsernameDisable(!UsernameDisable);\n    setPasswordDisable(!PasswordDisable);\n    setPhoneDisable(!PhoneDisable);\n  },\n  [showDOB]);\n\n  useEffect(() => {\n    setZipcodeDisable(!ZipcodeDisable);\n    setEmailDisable(!EmailDisable);\n    setUsernameDisable(!UsernameDisable);\n    setDOBDisable(!DOBDisable);\n    setPhoneDisable(!PhoneDisable);\n  },\n  [showPassword]);\n\n  useEffect(() => {\n    setZipcodeDisable(!ZipcodeDisable);\n    setEmailDisable(!EmailDisable);\n    setUsernameDisable(!UsernameDisable);\n    setDOBDisable(!DOBDisable);\n    setPasswordDisable(!PasswordDisable);\n  },\n  [showPhone]);\n  \n\n  const setUsername = (name) => {\n    store.username = name;\n    localStorage.setItem(\"userStore\", JSON.stringify(store));\n  }\n  const handleEditEmail = (event: React.MouseEvent) => {\n   event.preventDefault();\n   setShowEmail(!showEmail);\n  }\n   const handleEditUsername = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setShowUsername(!showUsername);\n   }\n   const handleEditPassword = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setShowPassword(!showPassword);\n   }\n   const handleEditDOB = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setShowDOB(!showDOB);\n   }\n   const handleEditZipcode = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setShowZipcode(!showZipcode);\n   }\n   const handleEditPhone = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setShowPhone(!showPhone);\n   }\n\n   const EditEmail1 = () => {\n    const formik = useFormik({\n      initialValues: {\n        email: '',\n      },\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n        setShowEmail(!showEmail);\n      },\n    });\n    return(\n      <form onSubmit={formik.handleSubmit}>\n        <h5>Email: </h5>\n        <div className=\"account-settings-field-row\">\n            {!showEmail &&\n              <span style={{fontSize: \"18px\"}}>\n                {store.email}\n              </span>\n            }\n            { showEmail && \n              <Input \n              type=\"email\"\n              name=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n              />\n            }\n          {!showEmail &&\n            <Button fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditEmail}>\n              Edit\n            </Button>\n          }\n          { showEmail &&\n            <Button type=\"submit\">Save</Button>\n          }\n        </div>\n    </form>\n    )\n   }\n\n  \n\n   const EditPassword1 = () => {\n    const formik = useFormik({\n      initialValues: {\n        currentpassword: '',\n        newpassword: '',\n        confirmnewpassword: '',\n      },\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n        setShowPassword(!showPassword);\n      },\n    });\n    return(\n      <form onSubmit={formik.handleSubmit}>\n      <p>Password: </p>\n      <div className=\"account-settings-field-row\">\n        {!showPassword &&\n          <span style={{fontSize: \"18px\"}}>\n            ***********\n          </span>\n        }\n        {showPassword && \n          <Input \n            type=\"text\"\n            name=\"currentpassword\"\n            placeholder=\"Current password\"\n            onChange={formik.handleChange}\n            value={formik.values.currentpassword}\n          />\n        }\n          <div>\n            { showPassword && \n              <Input \n              type=\"text\"\n              name=\"newpassword\"\n              placeholder=\"New Password\"\n              onChange={formik.handleChange}\n              value={formik.values.newpassword}\n              />\n            }\n            { showPassword && \n              <Input \n              type=\"text\"\n              name=\"confirmnewpassword\"\n              placeholder=\"Confirm New Password\"\n              onChange={formik.handleChange}\n              value={formik.values.confirmnewpassword}\n              />\n            }\n          </div>\n        <div>\n          {!showPassword &&\n            <Button fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditPassword}>\n              Edit\n            </Button>\n          }\n          { showPassword &&\n            <Button type=\"submit\">\n              Save</Button>\n          }\n        </div>\n      </div>\n    </form>\n    )\n   }\n\n   const EditDOB1 = () => {\n    const formik = useFormik({\n      initialValues: {\n        DOB: '',\n      },\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n        setShowDOB(!showDOB);\n      },\n    });\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <h5>Date of Birth: </h5>\n        <div className=\"account-settings-field-row\">\n          {!showDOB &&\n            <span style={{fontSize: \"18px\"}}>\n              {store.profile.dob}\n            </span>\n          }\n          <div>\n            { showDOB && \n              <Input \n              type=\"text\"\n              name=\"DOB\"\n              onChange={formik.handleChange}\n              value={formik.values.DOB}\n              />\n            }\n            {!showDOB &&\n              <Button fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditDOB}>\n                Edit\n              </Button>\n            }\n            { showDOB &&\n              <Button type=\"submit\">\n                Save\n              </Button>\n            }\n          </div>\n        </div>\n      </form>\n    )\n  }\n\n   const EditZipcode1 = () => {\n    const formik = useFormik({\n      initialValues: {\n        zipcode: '',\n      },\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n        setShowZipcode(!showZipcode);\n      },\n    });\n    return(\n      <form onSubmit={formik.handleSubmit}>\n        <h6>Zipcode: </h6>\n        <div className=\"account-settings-field-row\">\n            {!showZipcode &&\n              <span style={{fontSize: \"18px\"}}>\n                {store.profile.zipcode}\n              </span>\n            }\n            { showZipcode && \n              <Input \n              type=\"text\"\n              name=\"zipcode\"\n              onChange={formik.handleChange}\n              value={formik.values.zipcode}\n              />\n            }\n          {!showZipcode &&\n            <Button  fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditZipcode}>\n              Edit\n            </Button>\n          }\n          { showZipcode &&\n            <Button type=\"submit\">\n              Save\n            </Button>\n          }\n      </div>\n    </form>\n    )\n   }\n   \n\n  return (\n    <Default>\n      <div className=\"Values\">\n        <h3>Account Settings</h3>\n        <hr></hr>\n        <div>\n          <h5>Email: </h5>\n          <div className=\"account-settings-field-row\">\n            {!showEmail &&\n              <span style={{fontSize: \"18px\"}}>\n                {store.email}\n              </span>\n            }\n            {!showEmail &&\n              <Button hidden={EmailDisable} fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditEmail}>\n                Edit\n              </Button>\n            }\n            { showEmail &&\n              <EditEmail stateProps={{setShowEmail}}/>\n            }\n            </div>\n        </div>\n        <hr></hr>\n        <div>\n          <h5>Username: </h5>\n          <div className=\"account-settings-field-row\">\n            {!showUsername &&\n              <span style={{fontSize: \"18px\"}}>\n                {store.username}\n              </span>\n            }\n            {!showUsername &&\n              <Button  hidden={UsernameDisable} fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditUsername}>\n                Edit\n              </Button>\n            }\n            { showUsername &&\n              <EditUsername stateProps={{setShowUsername}}/>\n            }\n            </div>\n        </div>\n        <hr></hr>\n        <div>\n          <h5>Password: </h5>\n          <div className=\"account-settings-field-row\">\n            {!showPassword &&\n              <span style={{fontSize: \"18px\"}}>\n                xxxxxxxxxxx\n              </span>\n            }\n            {!showPassword &&\n              <Button  hidden={PasswordDisable} fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditPassword}>\n                Edit\n              </Button>\n            }\n            { showPassword &&\n              <EditPassword stateProps={{setShowPassword}}/>\n            }\n            </div>\n        </div>\n        <hr></hr>\n        <div>\n          <h5>Date of Birth: </h5>\n          <div className=\"account-settings-field-row\">\n            {!showDOB &&\n              <span style={{fontSize: \"18px\"}}>\n                {store.profile.dob}\n              </span>\n            }\n            {!showDOB &&\n              <Button  hidden={DOBDisable} fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditDOB}>\n                Edit\n              </Button>\n            }\n            { showDOB &&\n              <EditDOB stateProps={{setShowDOB}}/>\n            }\n            </div>\n        </div>\n        <hr></hr>\n        <div>\n          <h5>Phone Number: </h5>\n          <div className=\"account-settings-field-row\">\n            {!showPhone &&\n              <span style={{fontSize: \"18px\"}}>\n                {store.profile.phone}\n              </span>\n            }\n            {!showPhone &&\n              <Button  hidden={PhoneDisable} fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditPhone}>\n                Edit\n              </Button>\n            }\n            { showPhone &&\n              <EditPhone stateProps={{setShowPhone}}/>\n            }\n            </div>\n        </div>\n        <hr></hr>\n        <div>\n          <h5>Zipcode: </h5>\n          <div className=\"account-settings-field-row\">\n            {!showZipcode &&\n              <span style={{fontSize: \"18px\"}}>\n                {store.profile.zipcode}\n              </span>\n            }\n            {!showZipcode &&\n              <Button hidden={ZipcodeDisable} fontSize=\"12px\" padding=\"0px 6px\" margin=\"0px 4px\" background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" onClick={handleEditZipcode}>\n                Edit\n              </Button>\n            }\n            { showZipcode &&\n              <EditZipcode stateProps={{setShowZipcode}}/>\n            }\n            </div>\n        </div>\n      </div>\n    </Default>\n  );   \n}\nexport default UserSettings;\n  ","import React from 'react'\nimport UserSettings from '../components/LogIn/UserSettings'\n\nexport default function Usettings() {\n  return (\n  <div>\n    <UserSettings />\n  </div>)\n  }","\nexport const CANCERLOCATIONLIST = [\n    'Other/Rare Cancer',\n    'Bladder',\n    'Brain',\n    'Breast',\n    'Bone',\n    'Cervical',\n    'Colorectal',\n    'Esophageal',\n    'Gall Bladder',\n    'Gastric',\n    'Head and Neck',\n    'Kidney',\n    'Lymphoma',\n    'Leukemia',\n    'Liver',\n    'Lung',\n    'Melanoma',\n    'Multiple Myeloma',\n    'Ovarian',\n    'Pancreatic',\n    'Sarcoma',\n    'Thyroid'\n  ]\n\n  export const PERSONALITY_DESCRIPTION = ['Calm', 'Extroverted', 'Open to new Experiences', 'Reserved, quiet']\n\n  export const TREATMENT_STATUS_DESCRIPTIONS =[\n    'Newly diagnosed', \n    'In treatment (ex: in the process of having surgery, chemo, radiation)',\n    'Finished primary treatments-maybe on maintenance therapy (ex: hormone therapy)',\n    '1-5 years post treatment',\n    '> 5 years post treatment',\n    'Living with metastatic disease'\n  ]\n\n  export const PREFERRED_EXERCISE_LOCATIONS = [\n    'Home', \n    'Gym',\n    'Outdoors',\n    'No preference',\n    'Other - Describe in About You question below'\n    ]\n\n    export const PREFERRED_TIME_DESCRIPTIONS = [\n          'Morning',\n          'Mid-day',\n          'Afternoon',\n          'Evening'\n      ]\n\n    export const FITNESS_LEVEL_DESCRIPTIONS = [\n    'never been active',\n    'used to be active but currently not active',\n    'quite active',\n    'a little active',\n    'very active'\n    ]\n\n    export const WORK_STATUS_DESCRIPTIONS = \n    ['Currently working full time',\n    'Currently working part time',\n    'Currently not working'\n    ]\n\n    export const REFERRED_BY = [\n      'Facebook/social media',\n      'News/Media',\n      'Word of mouth',\n      'Web search',\n      'Event/conference/symposium',\n      'Cancer support organization',\n      'From my provider (physician, nurse, nutritionist)',\n      'Other'\n    ]\n    ","import React from 'react';\nimport colors from '../../assets/colors';\nimport styled from 'styled-components';\n\ninterface TextareaProps {\n  color?: string,\n  background?: string,\n  focusBorder?: string,\n  border?: string,\n  padding?: string,\n  margin?: string,\n  fontSize?: string,\n  borderRadius?: string\n}\n\nconst Textarea = styled.textarea<TextareaProps>`\n  color: ${props => props.color ? props.color : \"#484848\"};\n  background: ${props => props.background ? props.background : \"#ffffff\"};\n  padding: ${props => props.padding ? props.padding : \"4px 8px\"};\n  border-radius: ${props => props.borderRadius ? props.borderRadius : \"5px\"};\n  font-size: ${props => props.fontSize ? props.fontSize : \"14px\"};\n  border: ${props => props.border ? props.border : \"1px solid #b9b9b9\"};\n  margin: ${props => props.margin ? props.margin : \"0\"};\n  min-width: 25em;\n  height: 100px;\n  font-weight: 400;\n  outline:none;\n  overflow: none;\n  outline-style: none;\n  resize: none;\n  &:focus, &:not(:placeholder-shown) {\n    border: ${props => props.focusBorder ? props.focusBorder : \"1px solid \" + colors.primary};\n  }\n`\n\nexport default Textarea;","import React from 'react';\nimport colors from '../../assets/colors';\nimport styled from 'styled-components';\n\ninterface SelectProps {\n  color?: string,\n  background?: string,\n  focusBorder?: string,\n  border?: string,\n  padding?: string,\n  margin?: string,\n  fontSize?: string,\n  borderRadius?: string\n}\n\nconst Input = styled.select<SelectProps>`\n  color: ${props => props.color ? props.color : \"#484848\"};\n  background: ${props => props.background ? props.background : \"#f0f0f0\"};\n  padding: ${props => props.padding ? props.padding : \"0.3em\"};\n  min-width: 25em;\n  height: 50px;\n  border-radius: ${props => props.borderRadius ? props.borderRadius : \"5px\"};\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : \"14px\"};\n  outline:none;\n  border: ${props => props.border ? props.border : \"none\" };\n  margin: ${props => props.margin ? props.margin : \"0\"};\n  cursor: pointer;\n  &:after {\n    position: absolute;\n    content: \"\";\n    top: 14px;\n    right: 10px;\n`\n\nexport default Input;","import React, {useState, useEffect} from \"react\";\nimport { Formik, Field, Form } from 'formik';\nimport {useDataStore} from \"../../UserContext\";\nimport {useHistory} from 'react-router-dom';\nimport axios from \"axios\";\nimport { PROFILEURL, ROOTURL } from \"../../constants/matcher\";\nimport {PERSONALITY_DESCRIPTION, PREFERRED_EXERCISE_LOCATIONS, PREFERRED_TIME_DESCRIPTIONS, FITNESS_LEVEL_DESCRIPTIONS, WORK_STATUS_DESCRIPTIONS, CANCERLOCATIONLIST, TREATMENT_STATUS_DESCRIPTIONS} from \"../../constants/ProfileConstants\"\nimport Default from '../../layouts/Default'\nimport * as Yup from 'yup';\nimport Error from \"../LogIn/Error\";\nimport './EditProfile.scss'\nimport styled from '@emotion/styled';\n\nimport Input from '../Styled/input';\nimport Button from '../Styled/Button';\nimport Textarea from '../Styled/Textarea';\nimport Select from '../Styled/Select';\n\nimport { displayToast } from '../Toast/Toast';\n\nconst store = useDataStore();\n\nconst history = useHistory();\n\nconst sleep = (ms: any) => new Promise(resolve => setTimeout(resolve, ms));\n\nvar profile = store.profile;\n\nconst RadioButton = ({\n  field: { name, value, onChange, onBlur },\n  id,\n  label,\n  className,\n  ...props\n}) => {\n  return (\n    <div>\n      <input\n        name={name}\n        id={id}\n        type=\"radio\"\n        value={id || false}\n        checked={id === value}\n        onChange={onChange}\n        onBlur={onBlur}\n        className={\"radio-button\"}\n        {...props}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n};\n\n\n// with styled-components/emotion\nconst MyStyledInput = styled.input`\npadding: .5em;\nborder: 1px solid #000;\n/* ... */\n`\nconst MyStyledTextarea = MyStyledInput.withComponent('textarea');\n\nconst ValidationSchema = Yup.object().shape({\n  reason_for_match: Yup.string()\n    .min(1, \"Too Short!\")\n    .max(255, \"Too Long!\")\n    .required(\"Required\"),\n  cancer_location: Yup.string()\n    .required(\"Required\"),\n});\n\ninterface IEditProfile {\n  editControls: {\n    editMode: boolean,\n    setEditMode: React.Dispatch<React.SetStateAction<boolean>>\n  }\n}\n\nconst EditProfile: React.FC<IEditProfile> = ({editControls}) => { \n  let stringActivities: { id: string, name: string }[] = Object.keys(store.activities).map(function (key) {\n    const id = store.activities[key].id.toString()\n    const name = store.activities[key].name.toString();\n    return ({ id, name});\n  });\n  let stringReasons: { id: string, name: string }[] = Object.keys(store.exerciseReasons).map(function (key) {\n    const id = store.exerciseReasons[key].id.toString()\n    const name = store.exerciseReasons[key].name.toString();\n    return ({ id, name});\n  });\n\n  const handleCancel = (event: React.MouseEvent) => {\n    event.preventDefault();\n    editControls.setEditMode(false)\n  }\n\n  return(\n  \n  <div>\n    <Formik\n      initialValues={{\n        // About Me\n        activity_ids: profile.activity_ids.map(String),\n        other_favorite_activities: profile.other_favorite_activities,\n        fitness_level: profile.fitness_level,\n        exercise_reason_ids: profile.exercise_reason_ids.map(String),\n        prefered_exercise_location: profile.prefered_exercise_location,\n        prefered_exercise_time: profile.prefered_exercise_time,\n        reason_for_match: profile.reason_for_match,\n        personality: profile.personality,\n        work_status: profile.work_status,\n        details_about_self: profile.details_about_self,\n        //Cancer History\n        cancer_location: profile.cancer_location,\n        other_cancer_location: profile.other_cancer_location,\n        treatment_status: profile.treatment_status,\n        treatment_description:profile.treatment_description,\n        part_of_wellness_program: (profile.part_of_wellness_program),\n        which_wellness_program: profile.which_wellness_program,\n      }}\n      validationSchema={ValidationSchema}\n      validate={values => {\n        let errors = {};\n        return errors;\n      }}\n      onSubmit={async values => {\n        try {\n          // alert(JSON.stringify(profile, null, 2));\n          // alert(JSON.stringify(values.part_of_wellness_program, null, 2));\n          let url = PROFILEURL + \"/\"  + store.profile.id + \".json\" ;\n          //About Me\n          profile.activity_ids = values.activity_ids.map(Number);\n          profile.other_favorite_activities = values.other_favorite_activities;\n          profile.fitness_level = values.fitness_level;\n          profile.exercise_reason_ids = values.exercise_reason_ids.map(Number);\n          profile.prefered_exercise_location = values.prefered_exercise_location;\n          profile.prefered_exercise_time = values.prefered_exercise_time;\n          profile.reason_for_match = values.reason_for_match;\n          profile.personality = values.personality;\n          profile.work_status = values.work_status;\n          profile.details_about_self = values.details_about_self;\n          //Cancer History\n          profile.cancer_location = values.cancer_location;\n          profile.other_cancer_location = values.other_cancer_location;\n          profile.treatment_status = values.treatment_status;\n          profile.treatment_description = values.treatment_description;\n          profile.part_of_wellness_program = values.part_of_wellness_program;\n          profile.which_wellness_program = values.which_wellness_program;\n\n          const res = await axios.patch(url, { profile: profile }, {  withCredentials: true, headers: {\"Access-Control-Allow-Origin\": \"*\"}} )\n          store.profile = profile;\n          console.log(JSON.stringify(res));\n          editControls.setEditMode(false)\n          console.log(\"In handleBackToView\");\n          history.push(\"/profile\");\n          \n          displayToast(\"Successfully updated profile ✅\", \"success\", 3000, \"top-right\")\n        } catch (err) {\n          displayToast(\"Failed to update profile\", \"error\", 3000, \"top-right\")\n          if (err.response) {\n            // client received an error response (5xx, 4xx)\n          } else if (err.request) {\n            // client never received a response, or request never left\n          } else {\n            // anything else\n          }\n        }}\n      } // end of onSubmit\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue \n      }) => (\n        <Form>\n          {/* \n            Multiple checkboxes with the same name attribute, but different\n            value attributes will be considered a \"checkbox group\". Formik will automagically\n            bind the checked values to a single array for your benefit. All the add and remove\n            logic will be taken care of for you.\n          */}\n          <div className=\"form-container\">\n            <div className=\"question-title\">\n              Favorite activities (check all that apply)\n            </div>\n            <div className=\"Answers\">\n              <label>\n                {stringActivities.map(item => (<label> {item.name} <Field type=\"checkbox\" name=\"activity_ids\" value={item.id}></Field>&nbsp;&nbsp;&nbsp; </label>\t)  )}\n              </label>\n            </div>\n\n          <div className=\"question-wrapper\">          \n            <div className=\"question-title\">\n              Do you have any other favorite activities?\n            </div>\n              <label>\n              <Input name=\"other_favorite_activities\" placeholder=\"Enter any other favorite activity\" />\n              </label>\n          </div>\n\n          <div className=\"question-wrapper\">   \n            <div className=\"question-title\">\n              <label htmlFor=\"fitnessLevel\">How would you describe your current fitness level?</label>\n            </div>\n            <div className=\"Answers\">\n              <Field\n                as={Select}\n                id=\"fitness_level\"\n                name=\"fitness_level\"\n              >\n              <option value=\"\" label=\"- Select One -\" />\n              {FITNESS_LEVEL_DESCRIPTIONS.map(item => (<option key={item}\tvalue={item}>\t{item}</option>\t))}\n              </Field>\n            </div>\n          </div>\n        {/*} <select onChange={e => props.inputChange(e, \"fitness_level\")} defaultValue={props.currentEditProfile.fitness_level}>\t\n          \n        </select>*/}\n          <div className=\"question-wrapper\">\n            <div className=\"question-title\">\n              Identify your top reasons for wanting to become more active:\n            </div>\n            <div className=\"Answers\">\n              <label>\n                {stringReasons.map(item => (<label> {item.name} <Field type=\"checkbox\" name=\"exercise_reason_ids\" value={item.id}></Field>&nbsp;&nbsp;&nbsp; </label>\t)  )}\n              </label>\n            </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"prefered_exercise_location\">Where do you prefer to be active?</label>\n            <div className=\"Answers\">\n              <Field\n                as={Select}\n                id=\"prefered_exercise_location\"\n                name=\"prefered_exercise_location\"\n              >\n              <option value=\"\" label=\"- Select One -\" />\n              {PREFERRED_EXERCISE_LOCATIONS.map(item => (<option key={item}\tvalue={item}>\t{item}</option>\t))}\n              </Field>\n            </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"prefered_exercise_time\">When do you prefer to be active?</label>\n            <div className=\"Answers\">\n              <Field\n                as={Select}\n                id=\"prefered_exercise_time\"\n                name=\"prefered_exercise_time\"\n              >\n              <option value=\"\" label=\"- Select One -\" />\n              {PREFERRED_TIME_DESCRIPTIONS.map(item => (<option key={item}\tvalue={item}>\t{item}</option>\t))}\n              </Field>\n            </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"reason_for_match\">What is the main reason you want to be matched with an exercise partner?  </label>\n            <div className=\"Answers\">\n            <Field name=\"reason_for_match\"  as={Textarea} placeHolder=\"Reason for Matching With Partner\" />\n            {/* <Input></Input> */}\n            <Error touched={touched.reason_for_match} message={errors.reason_for_match} />\n            </div>\n          </div>\n\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"personality\">How would you describe your personality?</label>\n            <div className=\"Answers\">\n              <Field\n                as={Select}\n                id=\"personality\"\n                name=\"personality\"\n              >\n              <option value=\"\" label=\"- Select One -\" />\n              {PERSONALITY_DESCRIPTION.map(item => (<option key={item}\tvalue={item}>\t{item}</option>\t))}\n              </Field>\n            </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"work_status\">Which of the following best describes your work situation?</label>\n            <div className=\"Answers\">\n            <Field\n              as={Select}\n              id=\"work_status\"\n              name=\"work_status\"\n            >\n            <option value=\"\" label=\"- Select One -\" />\n            {WORK_STATUS_DESCRIPTIONS.map(item => (<option key={item}\tvalue={item}>\t{item}</option>\t))}\n            </Field>\n          </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"details_about_self\">About Me: Use this space for anything else you would like to share.</label>\n            <div className=\"Answers\">\n            <Field name=\"details_about_self\" as={Textarea} placeHolder=\"Details about self\" />\n            </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n          <label htmlFor=\"cancer_location\">What was your primary cancer diagnosis?</label>\n          <div className=\"Answers\">\n          <Field\n            as={Select}\n            id=\"cancer_location\"\n            name=\"cancer_location\"\n          >\n          <option value=\"\" label=\"- Select One -\" />\n          {CANCERLOCATIONLIST.map(item => (<option key={item}\tvalue={item}>\t{item}</option>\t))}\n          </Field>\n          <Error touched={touched.cancer_location} message={errors.cancer_location} />\n          </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"other_cancer_location\">Additional Cancer Information (e.g., stage, year diagnosed, DCIS, TNBC):  </label>\n            <div className=\"Answers\">\n            <Field name=\"other_cancer_location\" as={Textarea} placeHolder=\"Additional Cancer Information\" rows={2} cols={50}/>\n          </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n          <label htmlFor=\"treatment_status\">Which of the following best describes you?</label>\n          <div className=\"Answers\">\n          <Field\n            as={Select}\n            id=\"treatment_status\"\n            name=\"treatment_status\"\n          >\n          {TREATMENT_STATUS_DESCRIPTIONS.map(item => (<option key={item}  value={item}> {item}</option> ))}\n          </Field>\n          </div>\n          </div>\n\n\n          <div className=\"question-wrapper\">\n            <label htmlFor=\"treatment_description\">Please briefly describe your cancer treatments: </label>\n            <div className=\"Answers\">\n            <Field name=\"treatment_description\" as={Textarea} placeHolder=\"Treatment description\" rows={2} cols={50}/>\n          </div>\n          </div>\n\n          <div className=\"question-wrapper\">\n              <label htmlFor=\"treatment_status\">Have you ever been part of a support group or wellness program following your cancer diagnosis?:</label>\n\n                      <Field\n                        component={RadioButton}\n                        name=\"part_of_wellness_program\"\n                        id=\"true\"\n                        label=\"Yes\"\n                      />\n                      <Field\n                        component={RadioButton}\n                        name=\"part_of_wellness_program\"\n                        id=\"false\"\n                        label=\"No\"\n                      />\n          </div>  \n          \n             \n            <div>\n              <div className=\"question-wrapper\">\n                <label htmlFor=\"which_wellness_program\">If yes, what program? (list the name and location if possible, for example: INOVA Life with Cancer-Breast Cancer Support Group, Fairfax): </label>\n                <Field  name=\"which_wellness_program\" as={Input} placeoHlder=\"Which wellness program\" />\n              </div> \n            </div>\n            <Button margin=\"2em 0em\" padding=\"10px 20px\" disabled={isSubmitting}>\n                Submit\n            </Button>\n            <Button background=\"white\" color=\"#6429B9\" border=\"1px solid #6429B9\" margin=\"2em 1.5em\" padding=\"10px 20px\" onClick={handleCancel}>\n                Cancel\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  </div>\n);\n}\nexport default EditProfile;","import React, {useState, useEffect} from \"react\";\nimport {useDataStore} from \"../../UserContext\";\nimport EditProfile from \"./EditProfile\"\nimport UserSection from \"../Users/UserSection\";\nimport { useObserver } from \"mobx-react\";\nimport Button from '../Styled/Button';\nimport {useHistory, Prompt} from 'react-router-dom'\n\n\nconst ViewEditProfile: React.FC = ({  }) => {\n  const store = useDataStore();\n  const [currentProfile, setCurrentProfile] = useState(store.profile);\n  const [dataLoading, setDataLoading] = useState(\"\");\n  const history = useHistory()\n  const [editMode, setEditMode] = useState(false)\n  \n  return (\n    <div>\n      <Prompt\n        when={editMode}\n        message=\"Are you sure you want to leave? Your changes will not be saved.\"\n      />\n      <div>\n        { editMode ? (\n        <div>\n          <h3 className=\"profile-title\">Edit Profile</h3>\n          <p>All changes will become part of your profile.</p>\n        </div> \n        ) : <h3>My Profile</h3>}\n        { editMode ? null : <Button onClick={() => setEditMode(true)}>Edit Profile</Button> }\n      </div>\n      { editMode ? <EditProfile editControls={{editMode, setEditMode}} /> : <UserSection user={currentProfile} me={true} /> }\n    </div>\n  )\n}\nexport default ViewEditProfile;","import React from 'react'\nimport ViewEditProfile from '../components/manageProfile/ViewEditProfile'\nimport Default from '../layouts/Default'\n\n\nexport default function Profile() {\n  return (\n    <>\n    <Default>\n      <ViewEditProfile />\n    </Default>\n    </>\n    )\n  }\n  \n","import React, {useState, useEffect} from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Browse/Browse.scss';\n\nconst RangeSlider = ( (props) => {\n\n    const useStyles = makeStyles({\n        root: {\n          width: 200,\n          color: \"#9462a6\"\n        },\n      });\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className=\"age-range-input-wrap\">\n                <span>\n                 Age Range\n                </span>\n                <span>\n                    {/* <label className=\"age-range-label\" for=\"age-min\">Min</label> */}\n                    <input id=\"age-min\" value={props.ageRange[0]} className=\"age-range-input\" />\n                </span>\n                <span> to </span>\n                <span>\n                    {/* <label className=\"age-range-label\" for=\"age-max\">Max</label> */}\n                    <input  id=\"age-max\" className=\"age-range-input\" value={props.ageRange[1]} />\n                </span>\n            </div>\n            <Slider \n                className=\"slider-styling\"\n                value={props.ageRange}\n                onChange={props.onChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                valueLabelDisplay=\"auto\"\n            />\n        </div>\n    )\n})\n\nexport default RangeSlider;","import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport { ALLPROFILESURL, ROOTURL, PROFILEURL } from \"../../constants/matcher\";\nimport RangeSlider from \"../RangeSlider\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { useDataStore } from \"../../UserContext\";\nimport {Link} from 'react-router-dom'\n\nimport './Browse.scss'\nimport { useObserver } from \"mobx-react\";\nimport Button from '../Styled/Button'\nimport colors from \"../../assets/colors\"\nimport ChatIcon from '@material-ui/icons/Chat';\n//const BrowseProfiles: React.FC = ({  }) => {\n  export const BrowseProfiles = () => {\n  const store = useDataStore()\n  const [filter, setFilter] = React.useState(\"\");\n  const [userCollection, setUserCollection] = React.useState<any>([]);\n  const [ageRange, setAgeRange] = useState([18,120]);\n  const [distance, setDistance] = useState(0);\n\n  useEffect(() => {\n    const getProfiles = async () => {\n      try {\n        const { data } = await axios.get(ALLPROFILESURL,\n          { \n            params: {\n              min_age: ageRange[0],\n              max_age: ageRange[1],\n              distance: distance,\n              commit: \"Search\",\n              search: filter\n            },\n            withCredentials: true,\n            headers: {\n              contentType: \"application/json; charset=utf-8\",\n            }\n          })\n        setUserCollection(data)\n      } catch (e) {\n        console.log(`😱 Browse Fetch failed: ${e}`);\n        setUserCollection([]);\n      }\n    }\n    getProfiles()\n    }, [filter, ageRange]);\n\n  const handleChange = (event: any, newAgeRange: number[]) => {\n      setAgeRange(newAgeRange);\n  };\n\n  const updateLikedProfiles = async (type: 'like' | 'unlike', id: number) => {\n    try {\n      let url = PROFILEURL + \"/\" + store.profile.id + \".json\" ;\n      if (type===\"like\") {\n        store.likeProfile(id)\n      } else if (type===\"unlike\") {\n        store.unlikeProfile(id)\n      }\n      const result = await axios.patch(url, { profile: store.profile }, {  withCredentials: true, headers: {\"Access-Control-Allow-Origin\": \"*\"}} )\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const ProfileCard = ({profile}) => useObserver(() => (\n      <div className=\"single-profile-wrapper\" key={profile.id}>\n        <Link to={\"/user/\" + profile.id}>\n          <img className=\"single-profile-image\" src={ROOTURL + profile.photo} />\n        </Link>\n        <div className=\"single-profile-body\">\n          <div>\n            <Link to={\"/user/\" + profile.id}>\n              <h5 className=\"profile-username profile-name-loc\">{profile.name} · <span className=\"profile-location\">{profile.city}, {profile.state}</span></h5>\n            </Link>\n            <p className=\"other-profile-card-data\">{profile.cancer_location} Cancer</p>\n            <p className=\"other-profile-card-data\">{profile.age} years old</p>\n          </div>\n          <div>\n          <Link to={\"/messages\"}>\n            <ChatIcon className=\"favorite-profile-icon\"></ChatIcon>\n          </Link>\n          {store.profile.liked_profiles.includes(profile.id)  ? <FavoriteIcon onClick={() => updateLikedProfiles(\"unlike\", profile.id)} className=\"favorite-profile-icon\" /> : <FavoriteBorderIcon onClick={() => updateLikedProfiles(\"like\", profile.id)} className=\"favorite-profile-icon\" />}\n          </div>\n        </div>\n      </div>\n  ))\n \n  return useObserver(() => (\n    <>\n      <div>\n          <div className=\"browse-sticky-nav\">\n            <h3>Browse Profiles</h3>\n            <div className=\"browse-filter-row\"> \n              <input className=\"mdc-elevation--z1 browse-search global-input\" value={filter} onChange={e => setFilter(e.target.value)} placeholder=\"Search by Cancer Type OR Zipcode OR City\" />\n              <RangeSlider ageRange={ageRange} onChange={handleChange}/>\n              </div>\n          </div>\n          <div className=\"profile-browse-grid\">\n            {userCollection.map((profile: any) => (\n              <ProfileCard profile={profile} />\n            ))}\n        </div>\n      </div>\n    </>\n  ))\n}\n\nexport default BrowseProfiles;\n","import React from 'react'\nimport BrowseProfiles from '../components/Browse/BrowseProfiles'\nimport Default from '../layouts/Default';\n\nexport default function Home() {\n  return (\n    <Default>\n      <BrowseProfiles />\n    </Default>\n  )\n}\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport {useDataStore} from \"../../UserContext\";\nimport Default from '../../layouts/Default'\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport Error from \"./Error\";\nimport './SignIn.scss'\nimport { RESETPASSWORDURL } from \"../../constants/matcher\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport {useParams} from \"react-router-dom\";\n\nconst store = useDataStore();\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n \nconst recaptchaRef = React.createRef();\n\nconst ValidationSchema = Yup.object().shape({\n    password: Yup.string().required(\"This field is required\"),\n    changepassword: Yup.string().when(\"password\", {\n      is: val => (val && val.length > 0 ? true : false),\n      then: Yup.string().oneOf(\n        [Yup.ref(\"password\")],\n        \"Both password need to be the same\"\n        )\n    })\n  });\n\n\nconst ForgotPassword = () => {\n\n  const currentUserStore = useDataStore()\n\n  \n  return (\n    <Formik\n      initialValues={{\n        password: \"\",\n        changepassword: \"\"\n      }}\n      validationSchema={ValidationSchema}\n      validate={values => {\n        let errors = {};\n        \n        return errors;\n      }}\n         \n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n\n        setTimeout(() => {\n         // alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 500);\n   \n        const fetchData = async () => {\n          try {\n            \n            const result = await axios.post(RESETPASSWORDURL, {user: { password: values.password }, resetPassword:this.props.location.query.reset_password_token}, { withCredentials: true });\n              console.log(JSON.stringify(result));\n          } catch (error) {\n            //console.log(JSON.stringify(error));\n            console.log(error.message);\n              if (error.message.includes(\"401\")) {\n                // setErrorMessage(\"Invalid Email\");\n             } else {\n                 // setErrorMessage(error.message);\n              }\n           }\n          };\n         fetchData();\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n      }) => (\n        <form onSubmit={handleSubmit}>\n         <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.password}\n            />\n            <span class=\"error\" style={{ color: \"red\" }}>\n              {errors.password}\n            </span>\n\n            <label for=\"password\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"changepassword\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.changepassword}\n            />\n            <span class=\"error\" style={{ color: \"red\" }}>\n              {errors.changepassword}\n            </span>\n\n          <div className=\"input-row\">\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </div>\n          <form onSubmit={() => { recaptchaRef.current.execute(); }}>\n            <ReCAPTCHA\n               ref={recaptchaRef}\n               size=\"invisible\"\n               sitekey=\"6LdpusYUAAAAAMlMPRc3ljtC7He3A0XywRmhEt0U\"\n            />\n          </form>,\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default ForgotPassword;","import React from 'react'\nimport ResetPassword from '../components/LogIn/ResetPassword'\n\nexport default function Resetpassword(props) {\n  console.log(\"username\")\n  console.log(props);\n  return (\n  <div>\n    <ResetPassword />\n  </div>)\n  }","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport {useDataStore} from \"../../UserContext\";\nimport Default from '../../layouts/Default'\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport Error from \"./Error\";\nimport './SignIn.scss'\nimport { FORGOTUSERNAMEURL } from \"../../constants/matcher\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst store = useDataStore();\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n \nconst recaptchaRef = React.createRef();\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n  .email(\"Must be an email address\")\n  .max(255, \"Too Long!\")\n  .required(\"Required\")\n});\n\n\nconst ForgotPassword = () => {\n\n  const currentUserStore = useDataStore()\n\n  \n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n      }}\n      validationSchema={ValidationSchema}\n      validate={values => {\n        let errors = {};\n        \n        return errors;\n      }}\n         \n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n\n        setTimeout(() => {\n         // alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 500);\n   \n        const fetchData = async () => {\n          try {\n            \n            const result = await axios.post(FORGOTUSERNAMEURL, {user: { email: values.email  }, stype:\"P\" }, { withCredentials: true });\n              console.log(JSON.stringify(result));\n          } catch (error) {\n            //console.log(JSON.stringify(error));\n            console.log(error.message);\n              if (error.message.includes(\"401\")) {\n                // setErrorMessage(\"Invalid Email\");\n             } else {\n                 // setErrorMessage(error.message);\n              }\n           }\n          };\n         fetchData();\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <h2>Forgot Password</h2>\n          <h5>Please enter the email you used to sign up and we will send you instructions on how to reset your password.</h5>\n         \n          <div className=\"input-row\">\n            <label>Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              className={\"global-input login-form \" + (touched.email && errors.email ? \"has-error\" : null)}\n            />\n            <Error touched={touched.email} message={errors.email} />\n          </div>\n\n          <div className=\"input-row\">\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </div>\n          <form onSubmit={() => { recaptchaRef.current.execute(); }}>\n            <ReCAPTCHA\n               ref={recaptchaRef}\n               size=\"invisible\"\n               sitekey=\"6LdpusYUAAAAAMlMPRc3ljtC7He3A0XywRmhEt0U\"\n            />\n          </form>,\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default ForgotPassword;","import React from 'react'\nimport ForgotPassword from '../components/LogIn/ForgotPassword'\n\nexport default function Fpassword(props) {\n  console.log(\"username\")\n  console.log(props);\n  return (\n  <div>\n    <ForgotPassword />\n  </div>)\n  }","import React, {useState, useEffect} from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport axios from \"axios\";\nimport {useDataStore} from \"../UserContext\";\nimport { LOGOUTURL } from \"../constants/matcher\";\n\n//export default function SignOut() {\nconst SignOut: React.FC = ({  }) => {\n  const url = LOGOUTURL;\n  const store = useDataStore();\n  const history = useHistory();\n  \n  useEffect(() => {\n \n    const fetchData = async () => {\n      try {\n        const response = await axios.delete(url, { withCredentials: true });\n        console.log('👉 Returned data:', response);\n        store.username = \"\";\n        store.isLoggedIn = false;\n        store.clear();\n        localStorage.clear();\n      } catch (e) {\n        console.log(`😱 Axios request failed: ${e}`);\n        // error\n      }\n      history.push(\"/login\")\n    }\n    fetchData();\n\n  }, []);\n    \n    return (\n    <div>\n      \n    </div>\n      );\n}\n\nexport default SignOut;\n\n","import React from 'react'\nimport SignOut from '../components/SignOut'\n\nexport default function Logout() {\n  return (\n  <div>\n    <SignOut />\n  </div>)\n  }","import React, { Fragment, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport './Register.scss'\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport UnsIcon from '../../images/2Unstoppable_logo.png'\nimport { useDataStore } from \"../../UserContext\";\nimport { REGISTERURL, VALIDUSERNAMEURL } from \"../../constants/matcher\";\n//import DatePicker from \"../Auth/DatePicker\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { values } from \"mobx\";\nimport DateFnsUtils from '@date-io/date-fns';\n\nvar today = new Date();\nvar year = today.getFullYear();\nvar month = today.getMonth();\nvar day = today.getDate();\nconst minDate = new Date(year - 18, month, day);\n\nconst validationSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(1, \"Too Short!\")\n        .max(255, \"Too Long!\")\n        .required(\"Required\"),\n    password: Yup.string()\n        .min(8, \"Must be at least 8 characters long!\")\n        .required(\"Required\")\n        .matches(/(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])/),\n    email: Yup.string()\n        .email(\"Email is invalid\")\n        .required(\"Required\"),\n    zipcode: Yup.string()\n        .matches(/(^\\d{5}$)|(^\\d{9}$)|(^\\d{5}-\\d{4}$)/, \"Please enter a valid US or CA zip/postal code.\")\n        .required(\"Required\"),\n    referred_by: Yup.string()\n        .required(\"Required\"),\n    phone: Yup.string()\n        .length(10, \"Must be a valid US phone number!\"),\n    dob: Yup.date()\n        .required(\"Required\")\n        .nullable()\n        .max(minDate, \"You must be 18 years or older to sign up!\"),\n});\n\nconst Register2 = () => {\n\n    const history = useHistory();\n    const url = REGISTERURL;\n    const [isError, setIsError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const store = useDataStore();\n\n\n    return (\n        <Formik\n            initialValues={{\n                username: \"\",\n                email: \"\",\n                zipcode: \"\",\n                password: \"\",\n                hear: \"\",\n                referred_by: \"\",\n                dob: null,\n                age: \"\",\n                phone: \"\"\n            }}\n            validationSchema={validationSchema}\n            validate={values => {\n                let errors = {};\n                return errors;\n            }}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n                setSubmitting(true);\n                setTimeout(() => {\n                    // alert(JSON.stringify(values, null, 2));\n                    resetForm();\n                    setSubmitting(false);\n                }, 500);\n\n                console.log(values);\n\n                const createAcc = async () => {\n                    try {\n                        const result = await axios.post(url, {\n                            user:\n                            {\n                                \"username\": values.username,\n                                \"email\": values.email,\n                                \"dob(3i)\": day,\n                                \"dob(2i)\": month,\n                                \"dob(1i)\": year,\n                                \"zipcode\": values.zipcode,\n                                \"password\": values.password,\n                                \"phone\": values.phone,\n                            }\n                        },\n                            {\n                                withCredentials: true,\n                                headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\" }\n                            })\n                    } catch (err) {\n                        if (err.response) {\n                            // client received an error response (5xx, 4xx)\n                            setErrorMessage(err.message);\n                        } else if (err.request) {\n                            // client never received a response, or request never left\n                            setErrorMessage(err.message);\n                        } else {\n                            // anything else\n                            setErrorMessage(err.message);\n                        }\n                    }\n                    // end of error block\n                    if (store.isLoggedIn) {\n                        history.push(\"/profile\");\n                    } else {\n                        history.push(\"/register\")\n                    }\n                };\n                createAcc();\n            }}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                setFieldValue\n            }) => (\n                    <div className=\"mainBlock\">\n                        <form onSubmit={handleSubmit}>\n                            <img src={UnsIcon} className=\"logo\" />\n                            <div className=\"container\">\n                                <h1>Sign Up</h1>\n                                <p>Please fill in this form to create an account.</p>\n                                <table>\n                                    <th>\n                                        <h2>Account Information</h2>\n                                    </th>\n                                    <tr>\n                                        <td>\n                                            <h4>Username: </h4>\n                                            <p><i>Your username will be your profile display name.</i></p>\n                                            <input\n                                                id=\"username\"\n                                                type=\"text\"\n                                                name=\"username\"\n                                                value={values.username}\n                                                className={errors.username && touched.username ? \"error\" : null}\n                                                onBlur={handleBlur}\n                                                onChange={handleChange}\n                                            />\n                                            {touched.username && errors.username ? (\n                                                <div className=\"errorText\">{errors.username}</div>\n                                            ) : null}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4>Email:</h4>\n                                            <p><i>Email address will not be seen by other users.</i></p>\n                                            <input\n                                                id=\"email\"\n                                                type=\"email\"\n                                                name=\"email\"\n                                                className={errors.email && touched.email ? \"error\" : null}\n                                                onBlur={handleBlur}\n                                                value={values.email}\n                                                onChange={handleChange}\n                                            />\n                                            {errors.email && touched.email ? (\n                                                <div className=\"errorText\">{errors.email}</div>\n                                            ) : null}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4>Date of Birth:</h4>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <KeyboardDatePicker\n                                                    id=\"dob\"\n                                                    name=\"dob\"\n                                                    inputVariant=\"outlined\"\n                                                    disableFuture\n                                                    openTo=\"year\"\n                                                    views={[\"year\", \"month\", \"date\"]}\n                                                    format=\"MM/dd/yyyy\"\n                                                    onBlur={handleBlur}\n                                                    value={values.dob}\n                                                    onChange={value => setFieldValue(\"dob\", value)} \n                                                    className={errors.dob && touched.dob ? \"error\" : null}\n                                                    />\n                                                    {errors.dob && touched.dob ? (\n                                                <div className=\"errorText\">{errors.dob}</div>\n                                            ) : null}\n                                            </MuiPickersUtilsProvider>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4>Zip Code:</h4>\n                                            <p><i>Zip Code will be kept private, but will be used by our system to find exercise partners near you.</i></p>\n                                            <input\n                                                id=\"zipcode\"\n                                                type=\"text\"\n                                                name=\"zipcode\"\n                                                value={values.zipcode}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                className={errors.zipcode && touched.zipcode ? \"error\" : null}\n                                            />\n                                            {errors.zipcode && touched.zipcode ? (\n                                                <span className=\"errorText\">{errors.zipcode}</span>\n                                            ) : null}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4>Password:</h4>\n                                            <input\n                                                id=\"password\"\n                                                name=\"password\"\n                                                type=\"text\"\n                                                value={values.password}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                className={errors.password && touched.password ? \"error\" : null}\n                                            />\n                                            {errors.password && touched.password ? (\n                                                <span className=\"errorText\">{errors.password}</span>\n                                            ) : null}\n                                            <p><i>(8 characters minimum, must contain at least 1 uppercase, 1 lowercase, and 1 number)</i></p>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4>Phone Number:</h4>\n                                            <p><i>Your phone number will not be viewable to any other user.</i></p>\n                                            <input\n                                                id=\"phone\"\n                                                name=\"phone\"\n                                                type=\"text\"\n                                                value={values.phone}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                className={errors.phone && touched.phone ? \"error\" : null}\n                                            />\n                                            {errors.phone && touched.phone ? (\n                                                <span className=\"errorText\">{errors.phone}</span>\n                                            ) : null}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4>How did you learn about us?</h4>\n                                            <select\n                                                id=\"referred_by\"\n                                                name=\"referred_by\"\n                                                value={values.referred_by}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                className={errors.referred_by && touched.referred_by ? \"error\" : null}\n                                            >\n                                                <option value=\"\" label=\"Select an option\" />\n                                                <option value=\"social\" label=\"Facebook/Social Media\" />\n                                                <option value=\"news\" label=\"News Media\" />\n                                                <option value=\"Word\" label=\"Word of Mouth\" />\n                                                <option value=\"web\" label=\"Web Search\" />\n                                                <option value=\"event\" label=\"Event/Conference/Symposium\" />\n                                                <option value=\"org\" label=\"Cancer Support Organization\" />\n                                                <option value=\"provider\" label=\"My provider (physician, nurse, nutritionist)\" />\n                                                <option value=\"other\" label=\"Other\" />\n                                            </select>\n                                            {errors.referred_by && touched.referred_by ? (\n                                                <span className=\"errorText\">{errors.referred_by}</span>\n                                            ) : null}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <input type=\"checkbox\" required></input>\n                                            <span className=\"checkmark\"></span>\n                                            <label> I have read and agreed to the Terms of Use and Privacy Policy.</label>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div >\n                            <div className=\"submitButtons\">\n                                <table>\n                                    <tr>\n                                        <td>\n                                            <input className=\"buttons\" type=\"submit\" value=\"Create Account\" disabled={isSubmitting} />\n                                        </td>\n                                        <td>\n                                            <button className=\"buttons\" disabled={isSubmitting}>Cancel</button>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </form>\n                    </div>\n                )}\n        </Formik>\n    );\n}\nexport default Register2;","import React from 'react'\n/*import Register from '../components/Register/Register'*/\nimport Register2 from '../components/Register/Register2'\n\nexport default function Register() {\n  return (\n  <div>\n    <Register2 />\n  </div>)\n  }","import React, { useState} from \"react\";\nimport {Link, useHistory} from 'react-router-dom';\nimport './SignIn.scss'\n//import Autosuggest from \"react-autosuggest\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Error from \"./Error\";\nimport {useDataStore} from \"../../UserContext\";\nimport { LOGINURL } from \"../../constants/matcher\";\nimport Input from '../Styled/input'\nimport Button from '../Styled/Button'\n// import {displayToast} from \"../Toast/Toast\";\n\nconst ValidationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(1, \"Too Short!\")\n    .max(255, \"Too Long!\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .required(\"Required\")\n});\n\n\nconst SignIn2 = () => {\n  const history = useHistory();\n  const url = LOGINURL;\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const store = useDataStore()\n\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\"\n      }}\n      validationSchema={ValidationSchema}\n      validate={values => {\n        let errors = {};\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        setTimeout(() => {\n          //alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 500);\n\n        const fetchData = async () => {\n          setIsError(false);\n          store.isLoggedIn = false;\n     \n          try {\n            const result = await axios.post(url,\n              { user: {\"username\": values.username, \"password\": values.password}},\n              { withCredentials: true, headers: { contentType: \"application/json; charset=utf-8\", \"Accept\": \"application/json\"}\n            });\n              console.log(JSON.stringify(result));\n              console.log(result.data.username);\n              store.username =  result.data.username;\n              store.current_user_id = result.data.current_user_id;\n              store.email = result.data.email;\n              store.isLoggedIn = true;\n              store.profile = result.data.profile;\n              store.profileId = result.data.profile.id;\n              store.avatarPath = result.data.photo;\n              store.activities = result.data.all_activities;\n              store.exerciseReasons = result.data.all_exercise_reasons;\n              localStorage.setItem(\"userStore\", JSON.stringify(store));\n          } catch (error) {\n            console.log(error.message);\n            if (error.message.includes(\"401\")) {\n              setErrorMessage(\"Invalid Username or Password.\");\n            } else {\n              setErrorMessage(error.message);\n            }\n            setIsError(true);\n          }\n          if (store.isLoggedIn){\n            history.push(\"/home\");\n          } else {\n            history.push(\"/login\")\n          }\n        };\n        /* Login and fetch initial data */\n        fetchData();\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <h2>Login</h2>\n          { errorMessage && <h3 className=\"error\"> { errorMessage } </h3> }\n          <div className=\"input-row\">\n            <label>Name</label>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"username\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.username}\n              className={\"global-input \" + (touched.username && errors.username ? \"has-error\" : null)}\n              padding={\"1em\"}\n              border=\"1px solid #f0f0f0\"\n              focusBorder=\"1px solid #6429B9\"\n              fontSize=\"14px\"\n            />\n            <Error touched={touched.username} message={errors.username} />\n          </div>\n\n          <div className=\"input-row\">\n            <label>Password</label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              className={\"global-input \" + (touched.password && errors.password ? \"has-error\" : null)}\n              padding={\"1em\"}\n              border=\"1px solid #f0f0f0\"\n              focusBorder=\"1px solid #6429B9\"\n              fontSize=\"14px\"\n            />\n            <Error touched={touched.password} message={errors.password} />\n          </div>\n\n          <div className=\"input-row\">\n            <Button type=\"submit\" disabled={isSubmitting} padding=\"8px 30px\">\n              Log in\n            </Button>\n          </div>\n          <div className=\"register\">\n            <Link to='/register' activeClassName=\"active\">Sign Up</Link>\n          </div>\n          <div className=\"register\">\n            <Link to='/fusername' activeClassName=\"active\">Forgot Your Username?</Link>\n          </div>\n          <div className=\"register\">\n            <Link to='/fpassword' activeClassName=\"active\">Forgot Your Password?</Link>\n          </div>\n          <div className=\"register\">\n            <Link to='/resetpassword' activeClassName=\"active\">Reset Password</Link>\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default SignIn2;","import React from 'react'\nimport SignIn2 from '../components/LogIn/SignIn2'\n\nexport default function Login() {\n  return (\n  <div>\n    <SignIn2 />\n  </div>)\n  }\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport {useDataStore} from \"../../UserContext\";\nimport Default from '../../layouts/Default'\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport Error from \"./Error\";\nimport './SignIn.scss'\nimport { FORGOTUSERNAMEURL } from \"../../constants/matcher\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst store = useDataStore();\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n \nconst recaptchaRef = React.createRef();\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n  .email(\"Must be an email address\")\n  .max(255, \"Too Long!\")\n  .required(\"Required\")\n});\n\n\nconst ForgotUsername = () => {\n\n  const currentUserStore = useDataStore()\n\n  \n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n      }}\n      validationSchema={ValidationSchema}\n      validate={values => {\n        let errors = {};\n        \n        return errors;\n      }}\n         \n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n\n        setTimeout(() => {\n         // alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 500);\n   \n        const fetchData = async () => {\n          try {\n            \n            const result = await axios.post(FORGOTUSERNAMEURL, {user: { email: values.email  }}, { withCredentials: true });\n              console.log(JSON.stringify(result));\n          } catch (error) {\n            //console.log(JSON.stringify(error));\n            console.log(error.message);\n              if (error.message.includes(\"401\")) {\n                // setErrorMessage(\"Invalid Email\");\n             } else {\n                 // setErrorMessage(error.message);\n              }\n           }\n          };\n         fetchData();\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <h2>Forgot Username</h2>\n          <h5>Please enter the email you used to sign up and we will send you an email with your username.</h5>\n         \n          <div className=\"input-row\">\n            <label>Email</label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              className={\"global-input login-form \" + (touched.email && errors.email ? \"has-error\" : null)}\n            />\n            <Error touched={touched.email} message={errors.email} />\n          </div>\n\n          <div className=\"input-row\">\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </div>\n          <form onSubmit={() => { recaptchaRef.current.execute(); }}>\n            <ReCAPTCHA\n               ref={recaptchaRef}\n               size=\"invisible\"\n               sitekey=\"6LdpusYUAAAAAMlMPRc3ljtC7He3A0XywRmhEt0U\"\n            />\n          </form>,\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default ForgotUsername;","import React from 'react'\nimport ForgotUsername from '../components/LogIn/ForgotUsername'\n\nexport default function Fusername(props) {\n  console.log(\"username\")\n  console.log(props);\n  return (\n  <div>\n    <ForgotUsername />\n  </div>)\n  }","module.exports = __webpack_public_path__ + \"static/media/2unstoppable.77d71a9a.png\";","import React from 'react';\nimport colors from '../../assets/colors';\nimport styled from 'styled-components';\n\ninterface InputProps {\n  color?: string,\n  background?: string,\n  focusBorder?: string,\n  border?: string,\n  padding?: string,\n  margin?: string,\n  fontSize?: string,\n  borderRadius?: string\n}\n\nconst Input = styled.input<InputProps>`\n  color: ${props => props.color ? props.color : \"#484848\"};\n  background: ${props => props.background ? props.background : \"#ffffff\"};\n  padding: ${props => props.padding ? props.padding : \"4px 16px\"};\n  min-width: 25em;\n  height: 50px;\n  border-radius: ${props => props.borderRadius ? props.borderRadius : \"5px\"};\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : \"14px\"};\n  outline:none;\n  border: ${props => props.border ? props.border : \"1px solid #b9b9b9\"};\n  margin: ${props => props.margin ? props.margin : \"0\"};\n  &:focus, &:not(:placeholder-shown) {\n    border: ${props => props.focusBorder ? props.focusBorder : \"1px solid \" + colors.primary};\n  }\n`\n\nexport default Input;","module.exports = __webpack_public_path__ + \"static/media/2Unstoppable_logo.6b411738.png\";","var map = {\n\t\"./contact-us\": 214,\n\t\"./contact-us.js\": 214,\n\t\"./fpassword\": 239,\n\t\"./fpassword.js\": 239,\n\t\"./fusername\": 243,\n\t\"./fusername.js\": 243,\n\t\"./home\": 237,\n\t\"./home.js\": 237,\n\t\"./login\": 242,\n\t\"./login.js\": 242,\n\t\"./logout\": 240,\n\t\"./logout.js\": 240,\n\t\"./messages\": 226,\n\t\"./messages.tsx\": 226,\n\t\"./profile\": 236,\n\t\"./profile.js\": 236,\n\t\"./register\": 241,\n\t\"./register.js\": 241,\n\t\"./resetpassword\": 238,\n\t\"./resetpassword.js\": 238,\n\t\"./settings\": 235,\n\t\"./settings.js\": 235,\n\t\"./user\": 146,\n\t\"./user.tsx\": 146\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 308;","import React from 'react'\nimport {useRouteMatch} from 'react-router-dom'\n\nconst generatePage = page => {\n  const component = () => require(`./pages/${page}`).default\n\n  try {\n    return React.createElement(component())\n  } catch (err) {\n    console.warn(err)\n    return React.createElement(() => 404)\n  }\n}\n\nexport default function PageRenderer () {\n\n  const {\n    params: { page }\n  } = useRouteMatch()\n\n  return generatePage(page);\n}","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport {StoreProvider} from \"./UserContext\";\nimport PageRenderer from './page-renderer';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n// Pages\nimport User from './pages/user';\n\nconst NoMatchPage = () => {\n  return (\n    <h3>404 - Not found</h3>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <StoreProvider>\n        <Router>\n          <div className=\"App\">\n            <Switch>\n              <Route path=\"/user/:id\" component={User} />\n              <Route path=\"/:page\" component={PageRenderer} />\n              <Route path=\"/\" render={() => <Redirect to=\"/home\" />} />\n              <Route component={NoMatchPage} />\n            </Switch>\n          </div>\n        </Router>\n      </StoreProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport '@quasar/extras/ionicons-v4/ionicons-v4.css'\n\nimport './assets/scss/base.scss';\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport './Toast.scss'\nimport toaster from \"toasted-notes\";\n\ninterface IToastProps {\n  title: string | JSX.Element\n  appearance: \"success\" | \"info\" | \"error\" | \"warning\" | \"splash\"\n}\n\nconst Toast: React.FC<IToastProps> = ({ title, appearance }) => {\n\n  return (\n    <div className={\"toast-class \" + appearance + \"-toast\"}>\n      {title}\n    </div>\n  )\n}\n\ntype positionType = \"top-left\" | \"top\" | \"top-right\" | \"bottom-left\" | \"bottom\" | \"bottom-right\"\n\nexport const displayToast = (title: string, appearance: IToastProps[\"appearance\"], duration: number, position: positionType) => {\n  toaster.notify(() => <Toast title={title} appearance={appearance} />, {\n    position: position,\n    duration: duration\n  });\n}\n\nexport default Toast","import React from 'react'\nimport './Navigation.scss';\nimport { useDataStore } from \"../../UserContext\";\nimport { ALLPROFILESURL, ROOTURL } from \"../../constants/matcher\";\nimport {Avatar} from 'antd';\nimport UnsIcon from '../../images/2unstoppable.png'\nimport {useObserver} from 'mobx-react'\n\n\n//Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MessageIcon from '@material-ui/icons/Message';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\nimport { NavLink, Link } from 'react-router-dom';\n\nconst sideNavLinks = [\n  {\n    to: \"/home\",\n    name: \"Home\",\n    icon: <HomeIcon />\n  },\n  {\n    to: \"/profile\",\n    name: \"My Profile\",\n    icon: <AccountCircleIcon />\n  },\n  {\n    to: \"/messages\",\n    name: \"Messages\",\n    icon: <MessageIcon />\n  }\n]\n\nconst optionLinks = [\n  {\n    to: \"/settings\",\n    name: \"Settings\",\n    icon: <SettingsIcon />\n  },\n  {\n    to: \"/logout\",\n    name: \"Logout\",\n    icon: <ExitToAppIcon />\n  }\n]\n\nconst SideNav = () => {\n  const store = useDataStore()\n\n  return useObserver(() => (\n    <div className=\"sidenav-wrapper\">\n      <div style={{ display: \"flex\", justifyContent: \"center\"}}>\n        <img className=\"logo-navbar\" src={UnsIcon} alt=\"\" />\n      </div>\n      <div className=\"username-avatar-sidenav\">\n        <Avatar src={ROOTURL + store.avatarPath}  size= \"large\" />\n        <div className=\"sidebar-title\">{store.username}</div>\n      </div>\n      <div className=\"sidebar-subtitle primary-grey-text\">{store.email ? store.email : \"Email not defined.\"}</div>\n\n      <hr className=\"horizontal-break\" />\n\n      <div className=\"main-navlink\">  \n        {sideNavLinks.map((link: any) => (\n          <div className=\"sidenav-link\">\n            <NavLink className=\"sidenav-link-content\" activeClassName=\"sidenav-link-content-active\" to={link.to}>{link.icon} <span className=\"sidenav-link-name\">{link.name}</span></NavLink>\n          </div>\n        ))}\n      </div>  \n\n      <hr className=\"horizontal-break\" />\n      <div className=\"main-navlink\">\n        {optionLinks.map((link: any) => (\n            <div className=\"sidenav-link\">\n              <NavLink className=\"sidenav-link-content\" activeClassName=\"sidenav-link-content-active\" to={link.to}>{link.icon} <span className=\"sidenav-link-name\">{link.name}</span></NavLink>\n            </div>\n          ))}\n        </div>\n    </div>\n  ))\n}\n\nexport default SideNav\n","import React from 'react'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport './Navigation.scss'\n\nconst TopNav = () => {\n  return (\n    <div className=\"topnav-wrapper\">\n      <MenuIcon className=\"hamburger-top\" />\n      <span className=\"unstoppable-title-topnav\">2Unstoppable</span>\n    </div>\n  )\n}\n\nexport default TopNav\n","import React from 'react'\nimport Navigation from '../components/Navigation/Navigation';\nimport './index.scss'\nimport SideNav from '../components/Navigation/SideNav';\nimport TopNav from '../components/Navigation/TopNav';\n\nconst Default: React.FC = ({ children }) => {\n  return (\n    <>\n      <div className=\"default-main-view\">\n        <div className=\"sidenav-position\">\n          <SideNav></SideNav>\n        </div>\n        <div className=\"default-layout-main\">\n          <div>\n            <TopNav />\n          </div>\n          <div className=\"format-children-default\">\n          {children}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Default\n","const colors = {\n  primary: \"#6429B9\",\n  buttonBackground: `#6429B9 linear-gradient(330deg, #6429B9 0,#5e31da 25.55%)`\n}\n\nexport default colors;"],"sourceRoot":""}